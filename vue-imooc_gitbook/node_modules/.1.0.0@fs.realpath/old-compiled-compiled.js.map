{"version":3,"sources":["../.7.1.2@glob/node_modules/fs.realpath/old-compiled.js"],"names":[],"mappings":"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","file":"old-compiled-compiled.js","sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar pathModule = require('path');\nvar isWindows = process.platform === 'win32';\nvar fs = require('fs');\n\n// JavaScript implementation of realpath, ported from node pre-v6\n\nvar DEBUG = process.env.NODE_DEBUG && /fs/.test(process.env.NODE_DEBUG);\n\nfunction rethrow() {\n  // Only enable in debug mode. A backtrace uses ~1000 bytes of heap space and\n  // is fairly slow to generate.\n  var callback;\n  if (DEBUG) {\n    var backtrace = new Error();\n    callback = debugCallback;\n  } else callback = missingCallback;\n\n  return callback;\n\n  function debugCallback(err) {\n    if (err) {\n      backtrace.message = err.message;\n      err = backtrace;\n      missingCallback(err);\n    }\n  }\n\n  function missingCallback(err) {\n    if (err) {\n      if (process.throwDeprecation) throw err; // Forgot a callback but don't know where? Use NODE_DEBUG=fs\n      else if (!process.noDeprecation) {\n          var msg = 'fs: missing callback ' + (err.stack || err.message);\n          if (process.traceDeprecation) console.trace(msg);else console.error(msg);\n        }\n    }\n  }\n}\n\nfunction maybeCallback(cb) {\n  return typeof cb === 'function' ? cb : rethrow();\n}\n\nvar normalize = pathModule.normalize;\n\n// Regexp that finds the next partion of a (partial) path\n// result is [base_with_slash, base], e.g. ['somedir/', 'somedir']\nif (isWindows) {\n  var nextPartRe = /(.*?)(?:[\\/\\\\]+|$)/g;\n} else {\n  var nextPartRe = /(.*?)(?:[\\/]+|$)/g;\n}\n\n// Regex to find the device root, including trailing slash. E.g. 'c:\\\\'.\nif (isWindows) {\n  var splitRootRe = /^(?:[a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/][^\\\\\\/]+)?[\\\\\\/]*/;\n} else {\n  var splitRootRe = /^[\\/]*/;\n}\n\nexports.realpathSync = function realpathSync(p, cache) {\n  // make p is absolute\n  p = pathModule.resolve(p);\n\n  if (cache && Object.prototype.hasOwnProperty.call(cache, p)) {\n    return cache[p];\n  }\n\n  var original = p,\n      seenLinks = {},\n      knownHard = {};\n\n  // current character position in p\n  var pos;\n  // the partial path so far, including a trailing slash if any\n  var current;\n  // the partial path without a trailing slash (except when pointing at a root)\n  var base;\n  // the partial path scanned in the previous round, with slash\n  var previous;\n\n  start();\n\n  function start() {\n    // Skip over roots\n    var m = splitRootRe.exec(p);\n    pos = m[0].length;\n    current = m[0];\n    base = m[0];\n    previous = '';\n\n    // On windows, check that the root exists. On unix there is no need.\n    if (isWindows && !knownHard[base]) {\n      fs.lstatSync(base);\n      knownHard[base] = true;\n    }\n  }\n\n  // walk down the path, swapping out linked pathparts for their real\n  // values\n  // NB: p.length changes.\n  while (pos < p.length) {\n    // find the next part\n    nextPartRe.lastIndex = pos;\n    var result = nextPartRe.exec(p);\n    previous = current;\n    current += result[0];\n    base = previous + result[1];\n    pos = nextPartRe.lastIndex;\n\n    // continue if not a symlink\n    if (knownHard[base] || cache && cache[base] === base) {\n      continue;\n    }\n\n    var resolvedLink;\n    if (cache && Object.prototype.hasOwnProperty.call(cache, base)) {\n      // some known symbolic link.  no need to stat again.\n      resolvedLink = cache[base];\n    } else {\n      var stat = fs.lstatSync(base);\n      if (!stat.isSymbolicLink()) {\n        knownHard[base] = true;\n        if (cache) cache[base] = base;\n        continue;\n      }\n\n      // read the link if it wasn't read before\n      // dev/ino always return 0 on windows, so skip the check.\n      var linkTarget = null;\n      if (!isWindows) {\n        var id = stat.dev.toString(32) + ':' + stat.ino.toString(32);\n        if (seenLinks.hasOwnProperty(id)) {\n          linkTarget = seenLinks[id];\n        }\n      }\n      if (linkTarget === null) {\n        fs.statSync(base);\n        linkTarget = fs.readlinkSync(base);\n      }\n      resolvedLink = pathModule.resolve(previous, linkTarget);\n      // track this, if given a cache.\n      if (cache) cache[base] = resolvedLink;\n      if (!isWindows) seenLinks[id] = linkTarget;\n    }\n\n    // resolve the link, then start over\n    p = pathModule.resolve(resolvedLink, p.slice(pos));\n    start();\n  }\n\n  if (cache) cache[original] = p;\n\n  return p;\n};\n\nexports.realpath = function realpath(p, cache, cb) {\n  if (typeof cb !== 'function') {\n    cb = maybeCallback(cache);\n    cache = null;\n  }\n\n  // make p is absolute\n  p = pathModule.resolve(p);\n\n  if (cache && Object.prototype.hasOwnProperty.call(cache, p)) {\n    return process.nextTick(cb.bind(null, null, cache[p]));\n  }\n\n  var original = p,\n      seenLinks = {},\n      knownHard = {};\n\n  // current character position in p\n  var pos;\n  // the partial path so far, including a trailing slash if any\n  var current;\n  // the partial path without a trailing slash (except when pointing at a root)\n  var base;\n  // the partial path scanned in the previous round, with slash\n  var previous;\n\n  start();\n\n  function start() {\n    // Skip over roots\n    var m = splitRootRe.exec(p);\n    pos = m[0].length;\n    current = m[0];\n    base = m[0];\n    previous = '';\n\n    // On windows, check that the root exists. On unix there is no need.\n    if (isWindows && !knownHard[base]) {\n      fs.lstat(base, function (err) {\n        if (err) return cb(err);\n        knownHard[base] = true;\n        LOOP();\n      });\n    } else {\n      process.nextTick(LOOP);\n    }\n  }\n\n  // walk down the path, swapping out linked pathparts for their real\n  // values\n  function LOOP() {\n    // stop if scanned past end of path\n    if (pos >= p.length) {\n      if (cache) cache[original] = p;\n      return cb(null, p);\n    }\n\n    // find the next part\n    nextPartRe.lastIndex = pos;\n    var result = nextPartRe.exec(p);\n    previous = current;\n    current += result[0];\n    base = previous + result[1];\n    pos = nextPartRe.lastIndex;\n\n    // continue if not a symlink\n    if (knownHard[base] || cache && cache[base] === base) {\n      return process.nextTick(LOOP);\n    }\n\n    if (cache && Object.prototype.hasOwnProperty.call(cache, base)) {\n      // known symbolic link.  no need to stat again.\n      return gotResolvedLink(cache[base]);\n    }\n\n    return fs.lstat(base, gotStat);\n  }\n\n  function gotStat(err, stat) {\n    if (err) return cb(err);\n\n    // if not a symlink, skip to the next path part\n    if (!stat.isSymbolicLink()) {\n      knownHard[base] = true;\n      if (cache) cache[base] = base;\n      return process.nextTick(LOOP);\n    }\n\n    // stat & read the link if not read before\n    // call gotTarget as soon as the link target is known\n    // dev/ino always return 0 on windows, so skip the check.\n    if (!isWindows) {\n      var id = stat.dev.toString(32) + ':' + stat.ino.toString(32);\n      if (seenLinks.hasOwnProperty(id)) {\n        return gotTarget(null, seenLinks[id], base);\n      }\n    }\n    fs.stat(base, function (err) {\n      if (err) return cb(err);\n\n      fs.readlink(base, function (err, target) {\n        if (!isWindows) seenLinks[id] = target;\n        gotTarget(err, target);\n      });\n    });\n  }\n\n  function gotTarget(err, target, base) {\n    if (err) return cb(err);\n\n    var resolvedLink = pathModule.resolve(previous, target);\n    if (cache) cache[base] = resolvedLink;\n    gotResolvedLink(resolvedLink);\n  }\n\n  function gotResolvedLink(resolvedLink) {\n    // resolve the link, then start over\n    p = pathModule.resolve(resolvedLink, p.slice(pos));\n    start();\n  }\n};\n\n//# sourceMappingURL=old-compiled.js.map"]}
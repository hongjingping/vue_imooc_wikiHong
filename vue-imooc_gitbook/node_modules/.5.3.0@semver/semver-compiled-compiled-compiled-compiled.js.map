{"version":3,"sources":["../typings/node_modules/update-notifier/node_modules/latest-version/node_modules/package-json/node_modules/semver/semver-compiled-compiled-compiled.js"],"names":[],"mappings":"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","file":"semver-compiled-compiled-compiled-compiled.js","sourcesContent":["exports = module.exports = SemVer;\n\n// The debug function is excluded entirely from the minified version.\n/* nomin */var debug;\n/* nomin */if (typeof process === 'object' &&\n/* nomin */process.env &&\n/* nomin */process.env.NODE_DEBUG &&\n/* nomin *//\\bsemver\\b/i.test(process.env.NODE_DEBUG))\n  /* nomin */debug = function () {\n    /* nomin */var args = Array.prototype.slice.call(arguments, 0);\n    /* nomin */args.unshift('SEMVER');\n    /* nomin */console.log.apply(console, args);\n    /* nomin */\n  };\n  /* nomin */else\n  /* nomin */debug = function () {};\n\n// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nexports.SEMVER_SPEC_VERSION = '2.0.0';\n\nvar MAX_LENGTH = 256;\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\n// The actual regexps go on exports.re\nvar re = exports.re = [];\nvar src = exports.src = [];\nvar R = 0;\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\nvar NUMERICIDENTIFIER = R++;\nsrc[NUMERICIDENTIFIER] = '0|[1-9]\\\\d*';\nvar NUMERICIDENTIFIERLOOSE = R++;\nsrc[NUMERICIDENTIFIERLOOSE] = '[0-9]+';\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\nvar NONNUMERICIDENTIFIER = R++;\nsrc[NONNUMERICIDENTIFIER] = '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*';\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\nvar MAINVERSION = R++;\nsrc[MAINVERSION] = '(' + src[NUMERICIDENTIFIER] + ')\\\\.' + '(' + src[NUMERICIDENTIFIER] + ')\\\\.' + '(' + src[NUMERICIDENTIFIER] + ')';\n\nvar MAINVERSIONLOOSE = R++;\nsrc[MAINVERSIONLOOSE] = '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' + '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' + '(' + src[NUMERICIDENTIFIERLOOSE] + ')';\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\nvar PRERELEASEIDENTIFIER = R++;\nsrc[PRERELEASEIDENTIFIER] = '(?:' + src[NUMERICIDENTIFIER] + '|' + src[NONNUMERICIDENTIFIER] + ')';\n\nvar PRERELEASEIDENTIFIERLOOSE = R++;\nsrc[PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[NUMERICIDENTIFIERLOOSE] + '|' + src[NONNUMERICIDENTIFIER] + ')';\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\nvar PRERELEASE = R++;\nsrc[PRERELEASE] = '(?:-(' + src[PRERELEASEIDENTIFIER] + '(?:\\\\.' + src[PRERELEASEIDENTIFIER] + ')*))';\n\nvar PRERELEASELOOSE = R++;\nsrc[PRERELEASELOOSE] = '(?:-?(' + src[PRERELEASEIDENTIFIERLOOSE] + '(?:\\\\.' + src[PRERELEASEIDENTIFIERLOOSE] + ')*))';\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\nvar BUILDIDENTIFIER = R++;\nsrc[BUILDIDENTIFIER] = '[0-9A-Za-z-]+';\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\nvar BUILD = R++;\nsrc[BUILD] = '(?:\\\\+(' + src[BUILDIDENTIFIER] + '(?:\\\\.' + src[BUILDIDENTIFIER] + ')*))';\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\nvar FULL = R++;\nvar FULLPLAIN = 'v?' + src[MAINVERSION] + src[PRERELEASE] + '?' + src[BUILD] + '?';\n\nsrc[FULL] = '^' + FULLPLAIN + '$';\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\nvar LOOSEPLAIN = '[v=\\\\s]*' + src[MAINVERSIONLOOSE] + src[PRERELEASELOOSE] + '?' + src[BUILD] + '?';\n\nvar LOOSE = R++;\nsrc[LOOSE] = '^' + LOOSEPLAIN + '$';\n\nvar GTLT = R++;\nsrc[GTLT] = '((?:<|>)?=?)';\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\nvar XRANGEIDENTIFIERLOOSE = R++;\nsrc[XRANGEIDENTIFIERLOOSE] = src[NUMERICIDENTIFIERLOOSE] + '|x|X|\\\\*';\nvar XRANGEIDENTIFIER = R++;\nsrc[XRANGEIDENTIFIER] = src[NUMERICIDENTIFIER] + '|x|X|\\\\*';\n\nvar XRANGEPLAIN = R++;\nsrc[XRANGEPLAIN] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIER] + ')' + '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' + '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' + '(?:' + src[PRERELEASE] + ')?' + src[BUILD] + '?' + ')?)?';\n\nvar XRANGEPLAINLOOSE = R++;\nsrc[XRANGEPLAINLOOSE] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIERLOOSE] + ')' + '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' + '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' + '(?:' + src[PRERELEASELOOSE] + ')?' + src[BUILD] + '?' + ')?)?';\n\nvar XRANGE = R++;\nsrc[XRANGE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAIN] + '$';\nvar XRANGELOOSE = R++;\nsrc[XRANGELOOSE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAINLOOSE] + '$';\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\nvar LONETILDE = R++;\nsrc[LONETILDE] = '(?:~>?)';\n\nvar TILDETRIM = R++;\nsrc[TILDETRIM] = '(\\\\s*)' + src[LONETILDE] + '\\\\s+';\nre[TILDETRIM] = new RegExp(src[TILDETRIM], 'g');\nvar tildeTrimReplace = '$1~';\n\nvar TILDE = R++;\nsrc[TILDE] = '^' + src[LONETILDE] + src[XRANGEPLAIN] + '$';\nvar TILDELOOSE = R++;\nsrc[TILDELOOSE] = '^' + src[LONETILDE] + src[XRANGEPLAINLOOSE] + '$';\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\nvar LONECARET = R++;\nsrc[LONECARET] = '(?:\\\\^)';\n\nvar CARETTRIM = R++;\nsrc[CARETTRIM] = '(\\\\s*)' + src[LONECARET] + '\\\\s+';\nre[CARETTRIM] = new RegExp(src[CARETTRIM], 'g');\nvar caretTrimReplace = '$1^';\n\nvar CARET = R++;\nsrc[CARET] = '^' + src[LONECARET] + src[XRANGEPLAIN] + '$';\nvar CARETLOOSE = R++;\nsrc[CARETLOOSE] = '^' + src[LONECARET] + src[XRANGEPLAINLOOSE] + '$';\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\nvar COMPARATORLOOSE = R++;\nsrc[COMPARATORLOOSE] = '^' + src[GTLT] + '\\\\s*(' + LOOSEPLAIN + ')$|^$';\nvar COMPARATOR = R++;\nsrc[COMPARATOR] = '^' + src[GTLT] + '\\\\s*(' + FULLPLAIN + ')$|^$';\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\nvar COMPARATORTRIM = R++;\nsrc[COMPARATORTRIM] = '(\\\\s*)' + src[GTLT] + '\\\\s*(' + LOOSEPLAIN + '|' + src[XRANGEPLAIN] + ')';\n\n// this one has to use the /g flag\nre[COMPARATORTRIM] = new RegExp(src[COMPARATORTRIM], 'g');\nvar comparatorTrimReplace = '$1$2$3';\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\nvar HYPHENRANGE = R++;\nsrc[HYPHENRANGE] = '^\\\\s*(' + src[XRANGEPLAIN] + ')' + '\\\\s+-\\\\s+' + '(' + src[XRANGEPLAIN] + ')' + '\\\\s*$';\n\nvar HYPHENRANGELOOSE = R++;\nsrc[HYPHENRANGELOOSE] = '^\\\\s*(' + src[XRANGEPLAINLOOSE] + ')' + '\\\\s+-\\\\s+' + '(' + src[XRANGEPLAINLOOSE] + ')' + '\\\\s*$';\n\n// Star ranges basically just allow anything at all.\nvar STAR = R++;\nsrc[STAR] = '(<|>)?=?\\\\s*\\\\*';\n\n// Compile to actual regexp objects.\n// All are flag-free, unless they were created above with a flag.\nfor (var i = 0; i < R; i++) {\n  debug(i, src[i]);\n  if (!re[i]) re[i] = new RegExp(src[i]);\n}\n\nexports.parse = parse;\nfunction parse(version, loose) {\n  if (version instanceof SemVer) return version;\n\n  if (typeof version !== 'string') return null;\n\n  if (version.length > MAX_LENGTH) return null;\n\n  var r = loose ? re[LOOSE] : re[FULL];\n  if (!r.test(version)) return null;\n\n  try {\n    return new SemVer(version, loose);\n  } catch (er) {\n    return null;\n  }\n}\n\nexports.valid = valid;\nfunction valid(version, loose) {\n  var v = parse(version, loose);\n  return v ? v.version : null;\n}\n\nexports.clean = clean;\nfunction clean(version, loose) {\n  var s = parse(version.trim().replace(/^[=v]+/, ''), loose);\n  return s ? s.version : null;\n}\n\nexports.SemVer = SemVer;\n\nfunction SemVer(version, loose) {\n  if (version instanceof SemVer) {\n    if (version.loose === loose) return version;else version = version.version;\n  } else if (typeof version !== 'string') {\n    throw new TypeError('Invalid Version: ' + version);\n  }\n\n  if (version.length > MAX_LENGTH) throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters');\n\n  if (!(this instanceof SemVer)) return new SemVer(version, loose);\n\n  debug('SemVer', version, loose);\n  this.loose = loose;\n  var m = version.trim().match(loose ? re[LOOSE] : re[FULL]);\n\n  if (!m) throw new TypeError('Invalid Version: ' + version);\n\n  this.raw = version;\n\n  // these are actually numbers\n  this.major = +m[1];\n  this.minor = +m[2];\n  this.patch = +m[3];\n\n  if (this.major > MAX_SAFE_INTEGER || this.major < 0) throw new TypeError('Invalid major version');\n\n  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) throw new TypeError('Invalid minor version');\n\n  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) throw new TypeError('Invalid patch version');\n\n  // numberify any prerelease numeric ids\n  if (!m[4]) this.prerelease = [];else this.prerelease = m[4].split('.').map(function (id) {\n    if (/^[0-9]+$/.test(id)) {\n      var num = +id;\n      if (num >= 0 && num < MAX_SAFE_INTEGER) return num;\n    }\n    return id;\n  });\n\n  this.build = m[5] ? m[5].split('.') : [];\n  this.format();\n}\n\nSemVer.prototype.format = function () {\n  this.version = this.major + '.' + this.minor + '.' + this.patch;\n  if (this.prerelease.length) this.version += '-' + this.prerelease.join('.');\n  return this.version;\n};\n\nSemVer.prototype.toString = function () {\n  return this.version;\n};\n\nSemVer.prototype.compare = function (other) {\n  debug('SemVer.compare', this.version, this.loose, other);\n  if (!(other instanceof SemVer)) other = new SemVer(other, this.loose);\n\n  return this.compareMain(other) || this.comparePre(other);\n};\n\nSemVer.prototype.compareMain = function (other) {\n  if (!(other instanceof SemVer)) other = new SemVer(other, this.loose);\n\n  return compareIdentifiers(this.major, other.major) || compareIdentifiers(this.minor, other.minor) || compareIdentifiers(this.patch, other.patch);\n};\n\nSemVer.prototype.comparePre = function (other) {\n  if (!(other instanceof SemVer)) other = new SemVer(other, this.loose);\n\n  // NOT having a prerelease is > having one\n  if (this.prerelease.length && !other.prerelease.length) return -1;else if (!this.prerelease.length && other.prerelease.length) return 1;else if (!this.prerelease.length && !other.prerelease.length) return 0;\n\n  var i = 0;\n  do {\n    var a = this.prerelease[i];\n    var b = other.prerelease[i];\n    debug('prerelease compare', i, a, b);\n    if (a === undefined && b === undefined) return 0;else if (b === undefined) return 1;else if (a === undefined) return -1;else if (a === b) continue;else return compareIdentifiers(a, b);\n  } while (++i);\n};\n\n// preminor will bump the version up to the next minor release, and immediately\n// down to pre-release. premajor and prepatch work the same way.\nSemVer.prototype.inc = function (release, identifier) {\n  switch (release) {\n    case 'premajor':\n      this.prerelease.length = 0;\n      this.patch = 0;\n      this.minor = 0;\n      this.major++;\n      this.inc('pre', identifier);\n      break;\n    case 'preminor':\n      this.prerelease.length = 0;\n      this.patch = 0;\n      this.minor++;\n      this.inc('pre', identifier);\n      break;\n    case 'prepatch':\n      // If this is already a prerelease, it will bump to the next version\n      // drop any prereleases that might already exist, since they are not\n      // relevant at this point.\n      this.prerelease.length = 0;\n      this.inc('patch', identifier);\n      this.inc('pre', identifier);\n      break;\n    // If the input is a non-prerelease version, this acts the same as\n    // prepatch.\n    case 'prerelease':\n      if (this.prerelease.length === 0) this.inc('patch', identifier);\n      this.inc('pre', identifier);\n      break;\n\n    case 'major':\n      // If this is a pre-major version, bump up to the same major version.\n      // Otherwise increment major.\n      // 1.0.0-5 bumps to 1.0.0\n      // 1.1.0 bumps to 2.0.0\n      if (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0) this.major++;\n      this.minor = 0;\n      this.patch = 0;\n      this.prerelease = [];\n      break;\n    case 'minor':\n      // If this is a pre-minor version, bump up to the same minor version.\n      // Otherwise increment minor.\n      // 1.2.0-5 bumps to 1.2.0\n      // 1.2.1 bumps to 1.3.0\n      if (this.patch !== 0 || this.prerelease.length === 0) this.minor++;\n      this.patch = 0;\n      this.prerelease = [];\n      break;\n    case 'patch':\n      // If this is not a pre-release version, it will increment the patch.\n      // If it is a pre-release it will bump up to the same patch version.\n      // 1.2.0-5 patches to 1.2.0\n      // 1.2.0 patches to 1.2.1\n      if (this.prerelease.length === 0) this.patch++;\n      this.prerelease = [];\n      break;\n    // This probably shouldn't be used publicly.\n    // 1.0.0 \"pre\" would become 1.0.0-0 which is the wrong direction.\n    case 'pre':\n      if (this.prerelease.length === 0) this.prerelease = [0];else {\n        var i = this.prerelease.length;\n        while (--i >= 0) {\n          if (typeof this.prerelease[i] === 'number') {\n            this.prerelease[i]++;\n            i = -2;\n          }\n        }\n        if (i === -1) // didn't increment anything\n          this.prerelease.push(0);\n      }\n      if (identifier) {\n        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n        if (this.prerelease[0] === identifier) {\n          if (isNaN(this.prerelease[1])) this.prerelease = [identifier, 0];\n        } else this.prerelease = [identifier, 0];\n      }\n      break;\n\n    default:\n      throw new Error('invalid increment argument: ' + release);\n  }\n  this.format();\n  this.raw = this.version;\n  return this;\n};\n\nexports.inc = inc;\nfunction inc(version, release, loose, identifier) {\n  if (typeof loose === 'string') {\n    identifier = loose;\n    loose = undefined;\n  }\n\n  try {\n    return new SemVer(version, loose).inc(release, identifier).version;\n  } catch (er) {\n    return null;\n  }\n}\n\nexports.diff = diff;\nfunction diff(version1, version2) {\n  if (eq(version1, version2)) {\n    return null;\n  } else {\n    var v1 = parse(version1);\n    var v2 = parse(version2);\n    if (v1.prerelease.length || v2.prerelease.length) {\n      for (var key in v1) {\n        if (key === 'major' || key === 'minor' || key === 'patch') {\n          if (v1[key] !== v2[key]) {\n            return 'pre' + key;\n          }\n        }\n      }\n      return 'prerelease';\n    }\n    for (var key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return key;\n        }\n      }\n    }\n  }\n}\n\nexports.compareIdentifiers = compareIdentifiers;\n\nvar numeric = /^[0-9]+$/;\nfunction compareIdentifiers(a, b) {\n  var anum = numeric.test(a);\n  var bnum = numeric.test(b);\n\n  if (anum && bnum) {\n    a = +a;\n    b = +b;\n  }\n\n  return anum && !bnum ? -1 : bnum && !anum ? 1 : a < b ? -1 : a > b ? 1 : 0;\n}\n\nexports.rcompareIdentifiers = rcompareIdentifiers;\nfunction rcompareIdentifiers(a, b) {\n  return compareIdentifiers(b, a);\n}\n\nexports.major = major;\nfunction major(a, loose) {\n  return new SemVer(a, loose).major;\n}\n\nexports.minor = minor;\nfunction minor(a, loose) {\n  return new SemVer(a, loose).minor;\n}\n\nexports.patch = patch;\nfunction patch(a, loose) {\n  return new SemVer(a, loose).patch;\n}\n\nexports.compare = compare;\nfunction compare(a, b, loose) {\n  return new SemVer(a, loose).compare(b);\n}\n\nexports.compareLoose = compareLoose;\nfunction compareLoose(a, b) {\n  return compare(a, b, true);\n}\n\nexports.rcompare = rcompare;\nfunction rcompare(a, b, loose) {\n  return compare(b, a, loose);\n}\n\nexports.sort = sort;\nfunction sort(list, loose) {\n  return list.sort(function (a, b) {\n    return exports.compare(a, b, loose);\n  });\n}\n\nexports.rsort = rsort;\nfunction rsort(list, loose) {\n  return list.sort(function (a, b) {\n    return exports.rcompare(a, b, loose);\n  });\n}\n\nexports.gt = gt;\nfunction gt(a, b, loose) {\n  return compare(a, b, loose) > 0;\n}\n\nexports.lt = lt;\nfunction lt(a, b, loose) {\n  return compare(a, b, loose) < 0;\n}\n\nexports.eq = eq;\nfunction eq(a, b, loose) {\n  return compare(a, b, loose) === 0;\n}\n\nexports.neq = neq;\nfunction neq(a, b, loose) {\n  return compare(a, b, loose) !== 0;\n}\n\nexports.gte = gte;\nfunction gte(a, b, loose) {\n  return compare(a, b, loose) >= 0;\n}\n\nexports.lte = lte;\nfunction lte(a, b, loose) {\n  return compare(a, b, loose) <= 0;\n}\n\nexports.cmp = cmp;\nfunction cmp(a, op, b, loose) {\n  var ret;\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      ret = a === b;\n      break;\n    case '!==':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      ret = a !== b;\n      break;\n    case '':case '=':case '==':\n      ret = eq(a, b, loose);break;\n    case '!=':\n      ret = neq(a, b, loose);break;\n    case '>':\n      ret = gt(a, b, loose);break;\n    case '>=':\n      ret = gte(a, b, loose);break;\n    case '<':\n      ret = lt(a, b, loose);break;\n    case '<=':\n      ret = lte(a, b, loose);break;\n    default:\n      throw new TypeError('Invalid operator: ' + op);\n  }\n  return ret;\n}\n\nexports.Comparator = Comparator;\nfunction Comparator(comp, loose) {\n  if (comp instanceof Comparator) {\n    if (comp.loose === loose) return comp;else comp = comp.value;\n  }\n\n  if (!(this instanceof Comparator)) return new Comparator(comp, loose);\n\n  debug('comparator', comp, loose);\n  this.loose = loose;\n  this.parse(comp);\n\n  if (this.semver === ANY) this.value = '';else this.value = this.operator + this.semver.version;\n\n  debug('comp', this);\n}\n\nvar ANY = {};\nComparator.prototype.parse = function (comp) {\n  var r = this.loose ? re[COMPARATORLOOSE] : re[COMPARATOR];\n  var m = comp.match(r);\n\n  if (!m) throw new TypeError('Invalid comparator: ' + comp);\n\n  this.operator = m[1];\n  if (this.operator === '=') this.operator = '';\n\n  // if it literally is just '>' or '' then allow anything.\n  if (!m[2]) this.semver = ANY;else this.semver = new SemVer(m[2], this.loose);\n};\n\nComparator.prototype.toString = function () {\n  return this.value;\n};\n\nComparator.prototype.test = function (version) {\n  debug('Comparator.test', version, this.loose);\n\n  if (this.semver === ANY) return true;\n\n  if (typeof version === 'string') version = new SemVer(version, this.loose);\n\n  return cmp(version, this.operator, this.semver, this.loose);\n};\n\nexports.Range = Range;\nfunction Range(range, loose) {\n  if (range instanceof Range && range.loose === loose) return range;\n\n  if (!(this instanceof Range)) return new Range(range, loose);\n\n  this.loose = loose;\n\n  // First, split based on boolean or ||\n  this.raw = range;\n  this.set = range.split(/\\s*\\|\\|\\s*/).map(function (range) {\n    return this.parseRange(range.trim());\n  }, this).filter(function (c) {\n    // throw out any that are not relevant for whatever reason\n    return c.length;\n  });\n\n  if (!this.set.length) {\n    throw new TypeError('Invalid SemVer Range: ' + range);\n  }\n\n  this.format();\n}\n\nRange.prototype.format = function () {\n  this.range = this.set.map(function (comps) {\n    return comps.join(' ').trim();\n  }).join('||').trim();\n  return this.range;\n};\n\nRange.prototype.toString = function () {\n  return this.range;\n};\n\nRange.prototype.parseRange = function (range) {\n  var loose = this.loose;\n  range = range.trim();\n  debug('range', range, loose);\n  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n  var hr = loose ? re[HYPHENRANGELOOSE] : re[HYPHENRANGE];\n  range = range.replace(hr, hyphenReplace);\n  debug('hyphen replace', range);\n  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n  range = range.replace(re[COMPARATORTRIM], comparatorTrimReplace);\n  debug('comparator trim', range, re[COMPARATORTRIM]);\n\n  // `~ 1.2.3` => `~1.2.3`\n  range = range.replace(re[TILDETRIM], tildeTrimReplace);\n\n  // `^ 1.2.3` => `^1.2.3`\n  range = range.replace(re[CARETTRIM], caretTrimReplace);\n\n  // normalize spaces\n  range = range.split(/\\s+/).join(' ');\n\n  // At this point, the range is completely trimmed and\n  // ready to be split into comparators.\n\n  var compRe = loose ? re[COMPARATORLOOSE] : re[COMPARATOR];\n  var set = range.split(' ').map(function (comp) {\n    return parseComparator(comp, loose);\n  }).join(' ').split(/\\s+/);\n  if (this.loose) {\n    // in loose mode, throw out any that are not valid comparators\n    set = set.filter(function (comp) {\n      return !!comp.match(compRe);\n    });\n  }\n  set = set.map(function (comp) {\n    return new Comparator(comp, loose);\n  });\n\n  return set;\n};\n\n// Mostly just for testing and legacy API reasons\nexports.toComparators = toComparators;\nfunction toComparators(range, loose) {\n  return new Range(range, loose).set.map(function (comp) {\n    return comp.map(function (c) {\n      return c.value;\n    }).join(' ').trim().split(' ');\n  });\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nfunction parseComparator(comp, loose) {\n  debug('comp', comp);\n  comp = replaceCarets(comp, loose);\n  debug('caret', comp);\n  comp = replaceTildes(comp, loose);\n  debug('tildes', comp);\n  comp = replaceXRanges(comp, loose);\n  debug('xrange', comp);\n  comp = replaceStars(comp, loose);\n  debug('stars', comp);\n  return comp;\n}\n\nfunction isX(id) {\n  return !id || id.toLowerCase() === 'x' || id === '*';\n}\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0\nfunction replaceTildes(comp, loose) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceTilde(comp, loose);\n  }).join(' ');\n}\n\nfunction replaceTilde(comp, loose) {\n  var r = loose ? re[TILDELOOSE] : re[TILDE];\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('tilde', comp, _, M, m, p, pr);\n    var ret;\n\n    if (isX(M)) ret = '';else if (isX(m)) ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';else if (isX(p))\n      // ~1.2 == >=1.2.0 <1.3.0\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';else if (pr) {\n      debug('replaceTilde pr', pr);\n      if (pr.charAt(0) !== '-') pr = '-' + pr;\n      ret = '>=' + M + '.' + m + '.' + p + pr + ' <' + M + '.' + (+m + 1) + '.0';\n    } else\n      // ~1.2.3 == >=1.2.3 <1.3.0\n      ret = '>=' + M + '.' + m + '.' + p + ' <' + M + '.' + (+m + 1) + '.0';\n\n    debug('tilde return', ret);\n    return ret;\n  });\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0\n// ^1.2.3 --> >=1.2.3 <2.0.0\n// ^1.2.0 --> >=1.2.0 <2.0.0\nfunction replaceCarets(comp, loose) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceCaret(comp, loose);\n  }).join(' ');\n}\n\nfunction replaceCaret(comp, loose) {\n  debug('caret', comp, loose);\n  var r = loose ? re[CARETLOOSE] : re[CARET];\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('caret', comp, _, M, m, p, pr);\n    var ret;\n\n    if (isX(M)) ret = '';else if (isX(m)) ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';else if (isX(p)) {\n      if (M === '0') ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';else ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0';\n    } else if (pr) {\n      debug('replaceCaret pr', pr);\n      if (pr.charAt(0) !== '-') pr = '-' + pr;\n      if (M === '0') {\n        if (m === '0') ret = '>=' + M + '.' + m + '.' + p + pr + ' <' + M + '.' + m + '.' + (+p + 1);else ret = '>=' + M + '.' + m + '.' + p + pr + ' <' + M + '.' + (+m + 1) + '.0';\n      } else ret = '>=' + M + '.' + m + '.' + p + pr + ' <' + (+M + 1) + '.0.0';\n    } else {\n      debug('no pr');\n      if (M === '0') {\n        if (m === '0') ret = '>=' + M + '.' + m + '.' + p + ' <' + M + '.' + m + '.' + (+p + 1);else ret = '>=' + M + '.' + m + '.' + p + ' <' + M + '.' + (+m + 1) + '.0';\n      } else ret = '>=' + M + '.' + m + '.' + p + ' <' + (+M + 1) + '.0.0';\n    }\n\n    debug('caret return', ret);\n    return ret;\n  });\n}\n\nfunction replaceXRanges(comp, loose) {\n  debug('replaceXRanges', comp, loose);\n  return comp.split(/\\s+/).map(function (comp) {\n    return replaceXRange(comp, loose);\n  }).join(' ');\n}\n\nfunction replaceXRange(comp, loose) {\n  comp = comp.trim();\n  var r = loose ? re[XRANGELOOSE] : re[XRANGE];\n  return comp.replace(r, function (ret, gtlt, M, m, p, pr) {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr);\n    var xM = isX(M);\n    var xm = xM || isX(m);\n    var xp = xm || isX(p);\n    var anyX = xp;\n\n    if (gtlt === '=' && anyX) gtlt = '';\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0';\n      } else {\n        // nothing is forbidden\n        ret = '*';\n      }\n    } else if (gtlt && anyX) {\n      // replace X with 0\n      if (xm) m = 0;\n      if (xp) p = 0;\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        // >1.2.3 => >= 1.2.4\n        gtlt = '>=';\n        if (xm) {\n          M = +M + 1;\n          m = 0;\n          p = 0;\n        } else if (xp) {\n          m = +m + 1;\n          p = 0;\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<';\n        if (xm) M = +M + 1;else m = +m + 1;\n      }\n\n      ret = gtlt + M + '.' + m + '.' + p;\n    } else if (xm) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    } else if (xp) {\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n    }\n\n    debug('xRange return', ret);\n\n    return ret;\n  });\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nfunction replaceStars(comp, loose) {\n  debug('replaceStars', comp, loose);\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[STAR], '');\n}\n\n// This function is passed to string.replace(re[HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0\nfunction hyphenReplace($0, from, fM, fm, fp, fpr, fb, to, tM, tm, tp, tpr, tb) {\n\n  if (isX(fM)) from = '';else if (isX(fm)) from = '>=' + fM + '.0.0';else if (isX(fp)) from = '>=' + fM + '.' + fm + '.0';else from = '>=' + from;\n\n  if (isX(tM)) to = '';else if (isX(tm)) to = '<' + (+tM + 1) + '.0.0';else if (isX(tp)) to = '<' + tM + '.' + (+tm + 1) + '.0';else if (tpr) to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr;else to = '<=' + to;\n\n  return (from + ' ' + to).trim();\n}\n\n// if ANY of the sets match ALL of its comparators, then pass\nRange.prototype.test = function (version) {\n  if (!version) return false;\n\n  if (typeof version === 'string') version = new SemVer(version, this.loose);\n\n  for (var i = 0; i < this.set.length; i++) {\n    if (testSet(this.set[i], version)) return true;\n  }\n  return false;\n};\n\nfunction testSet(set, version) {\n  for (var i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) return false;\n  }\n\n  if (version.prerelease.length) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (var i = 0; i < set.length; i++) {\n      debug(set[i].semver);\n      if (set[i].semver === ANY) continue;\n\n      if (set[i].semver.prerelease.length > 0) {\n        var allowed = set[i].semver;\n        if (allowed.major === version.major && allowed.minor === version.minor && allowed.patch === version.patch) return true;\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false;\n  }\n\n  return true;\n}\n\nexports.satisfies = satisfies;\nfunction satisfies(version, range, loose) {\n  try {\n    range = new Range(range, loose);\n  } catch (er) {\n    return false;\n  }\n  return range.test(version);\n}\n\nexports.maxSatisfying = maxSatisfying;\nfunction maxSatisfying(versions, range, loose) {\n  return versions.filter(function (version) {\n    return satisfies(version, range, loose);\n  }).sort(function (a, b) {\n    return rcompare(a, b, loose);\n  })[0] || null;\n}\n\nexports.minSatisfying = minSatisfying;\nfunction minSatisfying(versions, range, loose) {\n  return versions.filter(function (version) {\n    return satisfies(version, range, loose);\n  }).sort(function (a, b) {\n    return compare(a, b, loose);\n  })[0] || null;\n}\n\nexports.validRange = validRange;\nfunction validRange(range, loose) {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, loose).range || '*';\n  } catch (er) {\n    return null;\n  }\n}\n\n// Determine if version is less than all the versions possible in the range\nexports.ltr = ltr;\nfunction ltr(version, range, loose) {\n  return outside(version, range, '<', loose);\n}\n\n// Determine if version is greater than all the versions possible in the range.\nexports.gtr = gtr;\nfunction gtr(version, range, loose) {\n  return outside(version, range, '>', loose);\n}\n\nexports.outside = outside;\nfunction outside(version, range, hilo, loose) {\n  version = new SemVer(version, loose);\n  range = new Range(range, loose);\n\n  var gtfn, ltefn, ltfn, comp, ecomp;\n  switch (hilo) {\n    case '>':\n      gtfn = gt;\n      ltefn = lte;\n      ltfn = lt;\n      comp = '>';\n      ecomp = '>=';\n      break;\n    case '<':\n      gtfn = lt;\n      ltefn = gte;\n      ltfn = gt;\n      comp = '<';\n      ecomp = '<=';\n      break;\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"');\n  }\n\n  // If it satisifes the range it is not outside\n  if (satisfies(version, range, loose)) {\n    return false;\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i];\n\n    var high = null;\n    var low = null;\n\n    comparators.forEach(function (comparator) {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0');\n      }\n      high = high || comparator;\n      low = low || comparator;\n      if (gtfn(comparator.semver, high.semver, loose)) {\n        high = comparator;\n      } else if (ltfn(comparator.semver, low.semver, loose)) {\n        low = comparator;\n      }\n    });\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false;\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) && ltefn(version, low.semver)) {\n      return false;\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexports.prerelease = prerelease;\nfunction prerelease(version, loose) {\n  var parsed = parse(version, loose);\n  return parsed && parsed.prerelease.length ? parsed.prerelease : null;\n}\n\n//# sourceMappingURL=semver-compiled.js.map\n\n//# sourceMappingURL=semver-compiled-compiled.js.map\n\n//# sourceMappingURL=semver-compiled-compiled-compiled.js.map"]}
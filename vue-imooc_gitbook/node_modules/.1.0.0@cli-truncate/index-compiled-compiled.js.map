{"version":3,"sources":["../.2.1.1@typings/node_modules/cli-truncate/index-compiled.js"],"names":[],"mappings":"AAAA;;AAEA,MAAM,YAAY,QAAQ,YAAR,CAAlB;AACA,MAAM,cAAc,QAAQ,cAAR,CAApB;;AAEA,OAAO,OAAP,GAAiB,CAAC,KAAD,EAAQ,OAAR,EAAiB,IAAjB,KAA0B;AAC1C,QAAO,OAAO,MAAP,CAAc;AACpB,YAAU;AADU,EAAd,EAEJ,IAFI,CAAP;;AAIA,OAAM,WAAW,KAAK,QAAtB;AACA,OAAM,WAAW,GAAjB;;AAEA,KAAI,OAAO,KAAP,KAAiB,QAArB,EAA+B;AAC9B,QAAM,IAAI,SAAJ,CAAe,0CAAyC,OAAO,KAAM,EAArE,CAAN;AACA;;AAED,KAAI,OAAO,OAAP,KAAmB,QAAvB,EAAiC;AAChC,QAAM,IAAI,SAAJ,CAAe,4CAA2C,OAAO,OAAQ,EAAzE,CAAN;AACA;;AAED,KAAI,UAAU,CAAd,EAAiB;AAChB,SAAO,EAAP;AACA;;AAED,KAAI,YAAY,CAAhB,EAAmB;AAClB,SAAO,QAAP;AACA;;AAED,OAAM,SAAS,YAAY,KAAZ,CAAf;;AAEA,KAAI,UAAU,OAAd,EAAuB;AACtB,SAAO,KAAP;AACA;;AAED,KAAI,aAAa,OAAjB,EAA0B;AACzB,SAAO,WAAW,UAAU,KAAV,EAAiB,SAAS,OAAT,GAAmB,CAApC,EAAuC,MAAvC,CAAlB;AACA,EAFD,MAEO,IAAI,aAAa,QAAjB,EAA2B;AACjC,QAAM,OAAO,KAAK,KAAL,CAAW,UAAU,CAArB,CAAb;AACA,SAAO,UAAU,KAAV,EAAiB,CAAjB,EAAoB,IAApB,IAA4B,QAA5B,GAAuC,UAAU,KAAV,EAAiB,UAAU,UAAU,IAApB,IAA4B,CAA7C,EAAgD,MAAhD,CAA9C;AACA,EAHM,MAGA,IAAI,aAAa,KAAjB,EAAwB;AAC9B,SAAO,UAAU,KAAV,EAAiB,CAAjB,EAAoB,UAAU,CAA9B,IAAmC,QAA1C;AACA;;AAED,OAAM,IAAI,KAAJ,CAAW,oFAAmF,QAAS,EAAvG,CAAN;AACA,CAxCD;;AA0CA","file":"index-compiled-compiled.js","sourcesContent":["'use strict';\n\nconst sliceAnsi = require('slice-ansi');\nconst stringWidth = require('string-width');\n\nmodule.exports = (input, columns, opts) => {\n\topts = Object.assign({\n\t\tposition: 'end'\n\t}, opts);\n\n\tconst position = opts.position;\n\tconst ellipsis = 'â€¦';\n\n\tif (typeof input !== 'string') {\n\t\tthrow new TypeError(`Expected \\`input\\` to be a string, got ${typeof input}`);\n\t}\n\n\tif (typeof columns !== 'number') {\n\t\tthrow new TypeError(`Expected \\`columns\\` to be a number, got ${typeof columns}`);\n\t}\n\n\tif (columns < 1) {\n\t\treturn '';\n\t}\n\n\tif (columns === 1) {\n\t\treturn ellipsis;\n\t}\n\n\tconst length = stringWidth(input);\n\n\tif (length <= columns) {\n\t\treturn input;\n\t}\n\n\tif (position === 'start') {\n\t\treturn ellipsis + sliceAnsi(input, length - columns + 1, length);\n\t} else if (position === 'middle') {\n\t\tconst half = Math.floor(columns / 2);\n\t\treturn sliceAnsi(input, 0, half) + ellipsis + sliceAnsi(input, length - (columns - half) + 1, length);\n\t} else if (position === 'end') {\n\t\treturn sliceAnsi(input, 0, columns - 1) + ellipsis;\n\t}\n\n\tthrow new Error(`Expected \\`options.position\\` to be either \\`start\\`, \\`middle\\` or \\`end\\`, got ${position}`);\n};\n\n//# sourceMappingURL=index-compiled.js.map"]}
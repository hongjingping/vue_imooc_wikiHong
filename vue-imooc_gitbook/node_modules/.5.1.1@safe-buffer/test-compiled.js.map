{"version":3,"sources":["../got/node_modules/safe-buffer/test.js"],"names":[],"mappings":"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","file":"test-compiled.js","sourcesContent":["/* eslint-disable node/no-deprecated-api */\n\nvar test = require('tape')\nvar SafeBuffer = require('./').Buffer\n\ntest('new SafeBuffer(value) works just like Buffer', function (t) {\n  t.deepEqual(new SafeBuffer('hey'), new Buffer('hey'))\n  t.deepEqual(new SafeBuffer('hey', 'utf8'), new Buffer('hey', 'utf8'))\n  t.deepEqual(new SafeBuffer('686579', 'hex'), new Buffer('686579', 'hex'))\n  t.deepEqual(new SafeBuffer([1, 2, 3]), new Buffer([1, 2, 3]))\n  t.deepEqual(new SafeBuffer(new Uint8Array([1, 2, 3])), new Buffer(new Uint8Array([1, 2, 3])))\n\n  t.equal(typeof SafeBuffer.isBuffer, 'function')\n  t.equal(SafeBuffer.isBuffer(new SafeBuffer('hey')), true)\n  t.equal(Buffer.isBuffer(new SafeBuffer('hey')), true)\n  t.notOk(SafeBuffer.isBuffer({}))\n\n  t.end()\n})\n\ntest('SafeBuffer.from(value) converts to a Buffer', function (t) {\n  t.deepEqual(SafeBuffer.from('hey'), new Buffer('hey'))\n  t.deepEqual(SafeBuffer.from('hey', 'utf8'), new Buffer('hey', 'utf8'))\n  t.deepEqual(SafeBuffer.from('686579', 'hex'), new Buffer('686579', 'hex'))\n  t.deepEqual(SafeBuffer.from([1, 2, 3]), new Buffer([1, 2, 3]))\n  t.deepEqual(SafeBuffer.from(new Uint8Array([1, 2, 3])), new Buffer(new Uint8Array([1, 2, 3])))\n\n  t.end()\n})\n\ntest('SafeBuffer.alloc(number) returns zeroed-out memory', function (t) {\n  for (var i = 0; i < 10; i++) {\n    var expected1 = new Buffer(1000)\n    expected1.fill(0)\n    t.deepEqual(SafeBuffer.alloc(1000), expected1)\n\n    var expected2 = new Buffer(1000 * 1000)\n    expected2.fill(0)\n    t.deepEqual(SafeBuffer.alloc(1000 * 1000), expected2)\n  }\n  t.end()\n})\n\ntest('SafeBuffer.allocUnsafe(number)', function (t) {\n  var buf = SafeBuffer.allocUnsafe(100) // unitialized memory\n  t.equal(buf.length, 100)\n  t.equal(SafeBuffer.isBuffer(buf), true)\n  t.equal(Buffer.isBuffer(buf), true)\n  t.end()\n})\n\ntest('SafeBuffer.from() throws with number types', function (t) {\n  t.plan(5)\n  t.throws(function () {\n    SafeBuffer.from(0)\n  })\n  t.throws(function () {\n    SafeBuffer.from(-1)\n  })\n  t.throws(function () {\n    SafeBuffer.from(NaN)\n  })\n  t.throws(function () {\n    SafeBuffer.from(Infinity)\n  })\n  t.throws(function () {\n    SafeBuffer.from(99)\n  })\n})\n\ntest('SafeBuffer.allocUnsafe() throws with non-number types', function (t) {\n  t.plan(4)\n  t.throws(function () {\n    SafeBuffer.allocUnsafe('hey')\n  })\n  t.throws(function () {\n    SafeBuffer.allocUnsafe('hey', 'utf8')\n  })\n  t.throws(function () {\n    SafeBuffer.allocUnsafe([1, 2, 3])\n  })\n  t.throws(function () {\n    SafeBuffer.allocUnsafe({})\n  })\n})\n\ntest('SafeBuffer.alloc() throws with non-number types', function (t) {\n  t.plan(4)\n  t.throws(function () {\n    SafeBuffer.alloc('hey')\n  })\n  t.throws(function () {\n    SafeBuffer.alloc('hey', 'utf8')\n  })\n  t.throws(function () {\n    SafeBuffer.alloc([1, 2, 3])\n  })\n  t.throws(function () {\n    SafeBuffer.alloc({})\n  })\n})\n"]}
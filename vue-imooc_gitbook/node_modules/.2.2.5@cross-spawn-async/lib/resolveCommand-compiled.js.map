{"version":3,"sources":["../../execa/node_modules/cross-spawn-async/lib/resolveCommand.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,OAAO,QAAQ,MAAR,CAAX;AACA,IAAI,QAAQ,QAAQ,OAAR,CAAZ;AACA,IAAI,MAAM,QAAQ,WAAR,CAAV;;AAEA,IAAI,eAAe,IAAI,GAAJ,CAAQ,EAAE,KAAK,EAAP,EAAW,QAAQ,KAAK,IAAxB,EAAR,CAAnB,C,CAA6D;AAC7D,IAAI,qBAAqB,IAAI,MAAJ,CAAW,QAAQ,QAAR,KAAqB,OAArB,GAA+B,QAA/B,GAA0C,IAArD,CAAzB;;AAEA,SAAS,cAAT,CAAwB,OAAxB,EAAiC,WAAjC,EAA8C;AAC1C,QAAI,QAAJ;;AAEA;AACA;AACA,QAAI,mBAAmB,IAAnB,CAAwB,OAAxB,CAAJ,EAAsC;AAClC,kBAAU,KAAK,OAAL,CAAa,OAAb,CAAV;AACH;;AAED,kBAAc,CAAC,CAAC,WAAhB;AACA,eAAW,aAAa,GAAb,CAAiB,UAAU,GAAV,GAAgB,WAAjC,CAAX;;AAEA;AACA,QAAI,aAAa,GAAb,CAAiB,OAAjB,CAAJ,EAA+B;AAC3B,eAAO,aAAa,GAAb,CAAiB,OAAjB,CAAP;AACH;;AAED,QAAI;AACA,mBAAW,CAAC,WAAD,GACP,MAAM,IAAN,CAAW,OAAX,CADO,GAEP,MAAM,IAAN,CAAW,OAAX,EAAoB,EAAE,SAAS,KAAK,SAAL,IAAkB,QAAQ,GAAR,CAAY,OAAZ,IAAuB,EAAzC,CAAX,EAApB,CAFJ;AAGH,KAJD,CAIE,OAAO,CAAP,EAAU,CAAE,WAAa;;AAE3B,iBAAa,GAAb,CAAiB,UAAU,GAAV,GAAgB,WAAjC,EAA8C,QAA9C;;AAEA,WAAO,QAAP;AACH;;AAED,OAAO,OAAP,GAAiB,cAAjB","file":"resolveCommand-compiled.js","sourcesContent":["'use strict';\n\nvar path = require('path');\nvar which = require('which');\nvar LRU = require('lru-cache');\n\nvar commandCache = new LRU({ max: 50, maxAge: 30 * 1000 });  // Cache just for 30sec\nvar hasSepInPathRegExp = new RegExp(process.platform === 'win32' ? /[\\/\\\\]/ : /\\//);\n\nfunction resolveCommand(command, noExtension) {\n    var resolved;\n\n    // If command looks like a file path, make it absolute to make it canonical\n    // and also to circuvent a bug in which, see: https://github.com/npm/node-which/issues/33\n    if (hasSepInPathRegExp.test(command)) {\n        command = path.resolve(command);\n    }\n\n    noExtension = !!noExtension;\n    resolved = commandCache.get(command + '!' + noExtension);\n\n    // Check if its resolved in the cache\n    if (commandCache.has(command)) {\n        return commandCache.get(command);\n    }\n\n    try {\n        resolved = !noExtension ?\n            which.sync(command) :\n            which.sync(command, { pathExt: path.delimiter + (process.env.PATHEXT || '') });\n    } catch (e) { /* empty */ }\n\n    commandCache.set(command + '!' + noExtension, resolved);\n\n    return resolved;\n}\n\nmodule.exports = resolveCommand;\n"]}
{"version":3,"sources":["../.2.1.1@typings/node_modules/typings-core/node_modules/rimraf/rimraf-compiled-compiled.js"],"names":[],"mappings":"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","file":"rimraf-compiled-compiled-compiled.js","sourcesContent":["module.exports = rimraf;\nrimraf.sync = rimrafSync;\n\nvar assert = require(\"assert\");\nvar path = require(\"path\");\nvar fs = require(\"fs\");\nvar glob = require(\"glob\");\n\nvar defaultGlobOpts = {\n  nosort: true,\n  silent: true\n};\n\n// for EMFILE handling\nvar timeout = 0;\n\nvar isWindows = process.platform === \"win32\";\n\nfunction defaults(options) {\n  var methods = ['unlink', 'chmod', 'stat', 'lstat', 'rmdir', 'readdir'];\n  methods.forEach(function (m) {\n    options[m] = options[m] || fs[m];\n    m = m + 'Sync';\n    options[m] = options[m] || fs[m];\n  });\n\n  options.maxBusyTries = options.maxBusyTries || 3;\n  options.emfileWait = options.emfileWait || 1000;\n  if (options.glob === false) {\n    options.disableGlob = true;\n  }\n  options.disableGlob = options.disableGlob || false;\n  options.glob = options.glob || defaultGlobOpts;\n}\n\nfunction rimraf(p, options, cb) {\n  if (typeof options === 'function') {\n    cb = options;\n    options = {};\n  }\n\n  assert(p, 'rimraf: missing path');\n  assert.equal(typeof p, 'string', 'rimraf: path should be a string');\n  assert.equal(typeof cb, 'function', 'rimraf: callback function required');\n  assert(options, 'rimraf: invalid options argument provided');\n  assert.equal(typeof options, 'object', 'rimraf: options should be object');\n\n  defaults(options);\n\n  var busyTries = 0;\n  var errState = null;\n  var n = 0;\n\n  if (options.disableGlob || !glob.hasMagic(p)) return afterGlob(null, [p]);\n\n  options.lstat(p, function (er, stat) {\n    if (!er) return afterGlob(null, [p]);\n\n    glob(p, options.glob, afterGlob);\n  });\n\n  function next(er) {\n    errState = errState || er;\n    if (--n === 0) cb(errState);\n  }\n\n  function afterGlob(er, results) {\n    if (er) return cb(er);\n\n    n = results.length;\n    if (n === 0) return cb();\n\n    results.forEach(function (p) {\n      rimraf_(p, options, function CB(er) {\n        if (er) {\n          if ((er.code === \"EBUSY\" || er.code === \"ENOTEMPTY\" || er.code === \"EPERM\") && busyTries < options.maxBusyTries) {\n            busyTries++;\n            var time = busyTries * 100;\n            // try again, with the same exact callback as this one.\n            return setTimeout(function () {\n              rimraf_(p, options, CB);\n            }, time);\n          }\n\n          // this one won't happen if graceful-fs is used.\n          if (er.code === \"EMFILE\" && timeout < options.emfileWait) {\n            return setTimeout(function () {\n              rimraf_(p, options, CB);\n            }, timeout++);\n          }\n\n          // already gone\n          if (er.code === \"ENOENT\") er = null;\n        }\n\n        timeout = 0;\n        next(er);\n      });\n    });\n  }\n}\n\n// Two possible strategies.\n// 1. Assume it's a file.  unlink it, then do the dir stuff on EPERM or EISDIR\n// 2. Assume it's a directory.  readdir, then do the file stuff on ENOTDIR\n//\n// Both result in an extra syscall when you guess wrong.  However, there\n// are likely far more normal files in the world than directories.  This\n// is based on the assumption that a the average number of files per\n// directory is >= 1.\n//\n// If anyone ever complains about this, then I guess the strategy could\n// be made configurable somehow.  But until then, YAGNI.\nfunction rimraf_(p, options, cb) {\n  assert(p);\n  assert(options);\n  assert(typeof cb === 'function');\n\n  // sunos lets the root user unlink directories, which is... weird.\n  // so we have to lstat here and make sure it's not a dir.\n  options.lstat(p, function (er, st) {\n    if (er && er.code === \"ENOENT\") return cb(null);\n\n    // Windows can EPERM on stat.  Life is suffering.\n    if (er && er.code === \"EPERM\" && isWindows) fixWinEPERM(p, options, er, cb);\n\n    if (st && st.isDirectory()) return rmdir(p, options, er, cb);\n\n    options.unlink(p, function (er) {\n      if (er) {\n        if (er.code === \"ENOENT\") return cb(null);\n        if (er.code === \"EPERM\") return isWindows ? fixWinEPERM(p, options, er, cb) : rmdir(p, options, er, cb);\n        if (er.code === \"EISDIR\") return rmdir(p, options, er, cb);\n      }\n      return cb(er);\n    });\n  });\n}\n\nfunction fixWinEPERM(p, options, er, cb) {\n  assert(p);\n  assert(options);\n  assert(typeof cb === 'function');\n  if (er) assert(er instanceof Error);\n\n  options.chmod(p, 666, function (er2) {\n    if (er2) cb(er2.code === \"ENOENT\" ? null : er);else options.stat(p, function (er3, stats) {\n      if (er3) cb(er3.code === \"ENOENT\" ? null : er);else if (stats.isDirectory()) rmdir(p, options, er, cb);else options.unlink(p, cb);\n    });\n  });\n}\n\nfunction fixWinEPERMSync(p, options, er) {\n  assert(p);\n  assert(options);\n  if (er) assert(er instanceof Error);\n\n  try {\n    options.chmodSync(p, 666);\n  } catch (er2) {\n    if (er2.code === \"ENOENT\") return;else throw er;\n  }\n\n  try {\n    var stats = options.statSync(p);\n  } catch (er3) {\n    if (er3.code === \"ENOENT\") return;else throw er;\n  }\n\n  if (stats.isDirectory()) rmdirSync(p, options, er);else options.unlinkSync(p);\n}\n\nfunction rmdir(p, options, originalEr, cb) {\n  assert(p);\n  assert(options);\n  if (originalEr) assert(originalEr instanceof Error);\n  assert(typeof cb === 'function');\n\n  // try to rmdir first, and only readdir on ENOTEMPTY or EEXIST (SunOS)\n  // if we guessed wrong, and it's not a directory, then\n  // raise the original error.\n  options.rmdir(p, function (er) {\n    if (er && (er.code === \"ENOTEMPTY\" || er.code === \"EEXIST\" || er.code === \"EPERM\")) rmkids(p, options, cb);else if (er && er.code === \"ENOTDIR\") cb(originalEr);else cb(er);\n  });\n}\n\nfunction rmkids(p, options, cb) {\n  assert(p);\n  assert(options);\n  assert(typeof cb === 'function');\n\n  options.readdir(p, function (er, files) {\n    if (er) return cb(er);\n    var n = files.length;\n    if (n === 0) return options.rmdir(p, cb);\n    var errState;\n    files.forEach(function (f) {\n      rimraf(path.join(p, f), options, function (er) {\n        if (errState) return;\n        if (er) return cb(errState = er);\n        if (--n === 0) options.rmdir(p, cb);\n      });\n    });\n  });\n}\n\n// this looks simpler, and is strictly *faster*, but will\n// tie up the JavaScript thread and fail on excessively\n// deep directory trees.\nfunction rimrafSync(p, options) {\n  options = options || {};\n  defaults(options);\n\n  assert(p, 'rimraf: missing path');\n  assert.equal(typeof p, 'string', 'rimraf: path should be a string');\n  assert(options, 'rimraf: missing options');\n  assert.equal(typeof options, 'object', 'rimraf: options should be object');\n\n  var results;\n\n  if (options.disableGlob || !glob.hasMagic(p)) {\n    results = [p];\n  } else {\n    try {\n      options.lstatSync(p);\n      results = [p];\n    } catch (er) {\n      results = glob.sync(p, options.glob);\n    }\n  }\n\n  if (!results.length) return;\n\n  for (var i = 0; i < results.length; i++) {\n    var p = results[i];\n\n    try {\n      var st = options.lstatSync(p);\n    } catch (er) {\n      if (er.code === \"ENOENT\") return;\n\n      // Windows can EPERM on stat.  Life is suffering.\n      if (er.code === \"EPERM\" && isWindows) fixWinEPERMSync(p, options, er);\n    }\n\n    try {\n      // sunos lets the root user unlink directories, which is... weird.\n      if (st && st.isDirectory()) rmdirSync(p, options, null);else options.unlinkSync(p);\n    } catch (er) {\n      if (er.code === \"ENOENT\") return;\n      if (er.code === \"EPERM\") return isWindows ? fixWinEPERMSync(p, options, er) : rmdirSync(p, options, er);\n      if (er.code !== \"EISDIR\") throw er;\n\n      rmdirSync(p, options, er);\n    }\n  }\n}\n\nfunction rmdirSync(p, options, originalEr) {\n  assert(p);\n  assert(options);\n  if (originalEr) assert(originalEr instanceof Error);\n\n  try {\n    options.rmdirSync(p);\n  } catch (er) {\n    if (er.code === \"ENOENT\") return;\n    if (er.code === \"ENOTDIR\") throw originalEr;\n    if (er.code === \"ENOTEMPTY\" || er.code === \"EEXIST\" || er.code === \"EPERM\") rmkidsSync(p, options);\n  }\n}\n\nfunction rmkidsSync(p, options) {\n  assert(p);\n  assert(options);\n  options.readdirSync(p).forEach(function (f) {\n    rimrafSync(path.join(p, f), options);\n  });\n\n  // We only end up here once we got ENOTEMPTY at least once, and\n  // at this point, we are guaranteed to have removed all the kids.\n  // So, we know that it won't be ENOENT or ENOTDIR or anything else.\n  // try really hard to delete stuff on windows, because it has a\n  // PROFOUNDLY annoying habit of not closing handles promptly when\n  // files are deleted, resulting in spurious ENOTEMPTY errors.\n  var retries = isWindows ? 100 : 1;\n  var i = 0;\n  do {\n    var threw = true;\n    try {\n      var ret = options.rmdirSync(p, options);\n      threw = false;\n      return ret;\n    } finally {\n      if (++i < retries && threw) continue;\n    }\n  } while (true);\n}\n\n//# sourceMappingURL=rimraf-compiled.js.map\n\n//# sourceMappingURL=rimraf-compiled-compiled.js.map"]}
{"version":3,"sources":["bin-search-compiled.js"],"names":[],"mappings":"AAAA;;AAEA,OAAO,cAAP,CAAsB,OAAtB,EAA+B,YAA/B,EAA6C,EAAE,OAAO,IAAT,EAA7C;AACA,IAAI,YAAY,QAAQ,WAAR,CAAhB;AACA,IAAI,iBAAiB,QAAQ,cAAR,CAArB;AACA,IAAI,QAAQ,QAAQ,eAAR,CAAZ;AACA,SAAS,IAAT,GAAgB;AACZ,WAAO,uhBAAP;AACH;AACD,QAAQ,IAAR,GAAe,IAAf;AACA,SAAS,IAAT,CAAc,IAAd,EAAoB,OAApB,EAA6B;AACzB,QAAI,QAAQ,KAAK,CAAL,CAAZ;AACA,QAAI,OAAO,QAAQ,IAAnB;AAAA,QACI,SAAS,QAAQ,MADrB;AAAA,QAEI,SAAS,QAAQ,MAFrB;AAAA,QAGI,QAAQ,QAAQ,KAHpB;AAAA,QAII,QAAQ,QAAQ,KAJpB;AAAA,QAKI,OAAO,QAAQ,IALnB;AAMA,WAAO,MAAM,OAAN,CAAc,eAAe,MAAf,CAAsB,EAAE,MAAM,IAAR,EAAc,QAAQ,MAAtB,EAA8B,OAAO,KAArC,EAA4C,QAAQ,MAApD,EAA4D,OAAO,KAAnE,EAA0E,OAAO,KAAjF,EAAwF,MAAM,IAA9F,EAAtB,CAAd,EAA2I,IAA3I,CAAgJ,UAAU,EAAV,EAAc;AACjK,YAAI,UAAU,GAAG,OAAjB;AAAA,YACI,QAAQ,GAAG,KADf;AAEA,YAAI,UAAU,CAAd,EAAiB;AACb,oBAAQ,GAAR,CAAY,6BAAZ;AACA;AACH;AACD,gBAAQ,GAAR,CAAY,aAAa,QAAQ,MAArB,GAA8B,MAA9B,GAAuC,KAAnD;AACA,gBAAQ,GAAR,CAAY,EAAZ;AACA,gBAAQ,GAAR,CAAY,UAAU,OAAV,CAAZ;AACH,KAVM,CAAP;AAWH;AACD,QAAQ,IAAR,GAAe,IAAf;AACA;;AAEA","file":"bin-search-compiled-compiled.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar columnify = require(\"columnify\");\nvar typings_core_1 = require(\"typings-core\");\nvar cli_1 = require(\"./support/cli\");\nfunction help() {\n    return \"\\ntypings search [query]\\n\\nOptions:\\n  [--name] <name>     Search for definitions by exact name (E.g. only \\\"react\\\")\\n  [--source] <source> The registry mirror (E.g. \\\"npm\\\", \\\"bower\\\", \\\"env\\\", \\\"global\\\", \\\"dt\\\", ...)\\n  [--offset] <x>      Skip first \\\"x\\\" results (default: 0)\\n  [--limit] <x>       Limit to \\\"x\\\" results (default: 20, max: 100)\\n  [--order] <order>   Direction to sort results (default: \\\"asc\\\", enum: \\\"asc\\\" or \\\"desc\\\")\\n  [--sort] <column>   Order results by a column (E.g. \\\"versions\\\", \\\"name\\\", ...)\\n\";\n}\nexports.help = help;\nfunction exec(args, options) {\n    var query = args[0];\n    var name = options.name,\n        source = options.source,\n        offset = options.offset,\n        limit = options.limit,\n        order = options.order,\n        sort = options.sort;\n    return cli_1.spinner(typings_core_1.search({ name: name, source: source, query: query, offset: offset, limit: limit, order: order, sort: sort })).then(function (_a) {\n        var results = _a.results,\n            total = _a.total;\n        if (total === 0) {\n            console.log('No results found for search');\n            return;\n        }\n        console.log(\"Viewing \" + results.length + \" of \" + total);\n        console.log('');\n        console.log(columnify(results));\n    });\n}\nexports.exec = exec;\n//# sourceMappingURL=bin-search.js.map\n\n//# sourceMappingURL=bin-search-compiled.js.map"]}
{"version":3,"sources":["../../typings/dist/bin.js"],"names":[],"mappings":";AACA;;AACA,OAAO,cAAP,CAAsB,OAAtB,EAA+B,YAA/B,EAA6C,EAAE,OAAO,IAAT,EAA7C;AACA,IAAI,WAAW,QAAQ,UAAR,CAAf;AACA,IAAI,WAAW,QAAQ,UAAR,CAAf;AACA,IAAI,aAAa,QAAQ,aAAR,CAAjB;AACA,IAAI,SAAS,QAAQ,MAAR,CAAb;AACA,IAAI,QAAQ,QAAQ,OAAR,CAAZ;AACA,IAAI,iBAAiB,QAAQ,iBAAR,CAArB;AACA,IAAI,SAAS,QAAQ,OAAR,CAAb;AACA,IAAI,WAAW,QAAQ,QAAR,CAAf;AACA,IAAI,QAAQ,QAAQ,eAAR,CAAZ;AACA,IAAI,YAAY,QAAQ,WAAR,CAAhB;AACA,IAAI,MAAM,QAAQ,iBAAR,CAAV;AACA,IAAI,gBAAgB,QAAQ,GAAR,CAAY,wBAAZ,KAAyC,QAAQ,GAAR,CAAY,oBAAZ,CAA7D;AACA,IAAI,OAAO,SAAS,QAAQ,IAAR,CAAa,KAAb,CAAmB,CAAnB,CAAT,EAAgC;AACvC,aAAS,CAAC,SAAD,EAAY,MAAZ,EAAoB,SAApB,EAA+B,UAA/B,EAA2C,QAA3C,EAAqD,SAArD,EAAgE,YAAhE,EAA8E,SAA9E,CAD8B;AAEvC,YAAQ,CAAC,KAAD,EAAQ,KAAR,EAAe,MAAf,EAAuB,QAAvB,EAAiC,QAAjC,EAA2C,OAA3C,EAAoD,MAApD,EAA4D,UAA5D,CAF+B;AAGvC,WAAO;AACH,gBAAQ,CAAC,GAAD,CADL;AAEH,iBAAS,CAAC,GAAD,CAFN;AAGH,cAAM,CAAC,GAAD,CAHH;AAIH,iBAAS,CAAC,UAAD,EAAa,GAAb,CAJN;AAKH,kBAAU,CAAC,UAAD,EAAa,GAAb,CALP;AAMH,iBAAS,CAAC,GAAD,CANN;AAOH,aAAK,CAAC,GAAD,CAPF;AAQH,cAAM,CAAC,GAAD;AARH,KAHgC;AAavC,aAAS;AACL,iBAAS,gBAAgB,OAAO,aAAP,CAAhB,GAAwC,YAD5C;AAEL,oBAAY,QAAQ,GAAR,CAAY,UAAZ,MAA4B;AAFnC;AAb8B,CAAhC,CAAX;AAkBA,SAAS,MAAT,CAAgB,KAAhB,EAAuB;AACnB,WAAO,UAAU,GAAV,IAAiB,UAAU,MAAlC;AACH;AACD,IAAI,MAAM,KAAK,GAAL,GAAW,OAAO,OAAP,CAAe,KAAK,GAApB,CAAX,GAAsC,QAAQ,GAAR,EAAhD;AACA,IAAI,UAAU,IAAI,SAAS,YAAb,EAAd;AACA,IAAI,OAAO,OAAO,IAAP,EAAa,EAAE,SAAS,OAAX,EAAoB,KAAK,GAAzB,EAAb,CAAX;AACA,IAAI,KAAK,QAAT,EAAmB;AACf,UAAM,WAAN,CAAkB,KAAK,QAAvB;AACH;AACD,eAAe,EAAE,KAAK,GAAP,EAAf,EAA6B,MAA7B;AACA,KAAK,IAAL;AACA,QAAQ,EAAR,CAAW,QAAX,EAAqB,UAAU,EAAV,EAAc;AAC/B,QAAI,OAAO,GAAG,IAAd;AACA,UAAM,UAAN,CAAiB,YAAY,IAAZ,GAAmB,eAApC,EAAqD,QAArD;AACH,CAHD;AAIA,QAAQ,EAAR,CAAW,YAAX,EAAyB,UAAU,EAAV,EAAc;AACnC,QAAI,OAAO,GAAG,IAAd;AAAA,QAAoB,UAAU,GAAG,OAAjC;AACA,UAAM,UAAN,CAAiB,mBAAmB,IAAnB,GAA0B,wBAA1B,GAAqD,OAAO,QAAP,CAAgB,GAAhB,EAAqB,OAArB,CAArD,GAAqF,iBAArF,GACb,yFADJ,EAC+F,YAD/F;AAEH,CAJD;AAKA,QAAQ,EAAR,CAAW,aAAX,EAA0B,UAAU,EAAV,EAAc;AACpC,QAAI,UAAU,GAAG,OAAjB;AAAA,QAA0B,OAAO,GAAG,IAApC;AACA,UAAM,OAAN,CAAc,OAAO,IAAP,GAAc,OAA5B,EAAqC,aAArC;AACH,CAHD;AAIA,QAAQ,EAAR,CAAW,aAAX,EAA0B,UAAU,EAAV,EAAc;AACpC,QAAI,MAAM,GAAG,GAAb;AACA,UAAM,UAAN,CAAiB,OAAO,GAAP,GAAa,iEAA9B,EAAiG,aAAjG;AACH,CAHD;AAIA,QAAQ,EAAR,CAAW,YAAX,EAAyB,UAAU,EAAV,EAAc;AACnC,QAAI,OAAO,GAAG,IAAd;AAAA,QAAoB,MAAM,GAAG,GAA7B;AAAA,QAAkC,SAAS,GAAG,MAA9C;AACA,QAAI,UAAU,IAAV,IAAkB,OAAO,GAAP,IAAc,IAApC,EAA0C;AACtC,cAAM,UAAN,CAAiB,KAAK,kBAAL,KAA4B,MAA5B,GAAqC,GAArC,GAA2C,iDAA5D,EAA+G,YAA/G;AACH;AACJ,CALD;AAMA,QAAQ,EAAR,CAAW,OAAX,EAAoB,UAAU,EAAV,EAAc;AAC9B,QAAI,OAAO,GAAG,IAAd;AAAA,QAAoB,SAAS,GAAG,MAAhC;AAAA,QAAwC,aAAa,GAAG,UAAxD;AACA,QAAI,SAAS,MAAM,IAAN,CAAW,OAAO,UAAP,GAAoB,GAApB,IAA2B,SAAS,WAAT,GAAuB,EAAlD,CAAX,CAAb;AACA,UAAM,OAAN,CAAc,KAAK,IAAL,GAAY,MAA1B,EAAkC,OAAlC;AACH,CAJD;AAKA,QAAQ,EAAR,CAAW,SAAX,EAAsB,UAAU,EAAV,EAAc;AAChC,QAAI,MAAM,GAAG,GAAb;AAAA,QAAkB,OAAO,GAAG,IAA5B;AACA,UAAM,SAAN,CAAgB,iBAAiB,IAAjB,GAAwB,YAAxB,GAAuC,GAAvC,GAA6C,IAA7D;AACH,CAHD;AAIA,QAAQ,EAAR,CAAW,UAAX,EAAuB,UAAU,EAAV,EAAc;AACjC,QAAI,OAAO,GAAG,IAAd;AACA,UAAM,SAAN,CAAgB,gBAAgB,IAAhB,GAAuB,IAAvC;AACH,CAHD;AAIA,QAAQ,EAAR,CAAW,mBAAX,EAAgC,UAAU,EAAV,EAAc;AAC1C,QAAI,OAAO,GAAG,IAAd;AACA,UAAM,SAAN,CAAgB,iBAAiB,IAAjB,GAAwB,IAAxC;AACH,CAHD;AAIA,SAAS,IAAT,CAAc,OAAd,EAAuB;AACnB,QAAI,QAAQ,CAAR,CAAU,MAAd,EAAsB;AAClB,YAAI,UAAU,UAAU,OAAV,CAAkB,QAAQ,CAAR,CAAU,CAAV,CAAlB,CAAd;AACA,YAAI,SAAS,QAAQ,CAAR,CAAU,KAAV,CAAgB,CAAhB,CAAb;AACA,YAAI,WAAW,IAAf,EAAqB;AACjB,gBAAI,QAAQ,IAAZ,EAAkB;AACd,uBAAO,QAAQ,GAAR,CAAY,QAAQ,IAAR,EAAZ,CAAP;AACH;AACD,mBAAO,MAAM,MAAN,CAAa,QAAQ,IAAR,CAAa,MAAb,EAAqB,OAArB,CAAb,EAA4C,OAA5C,CAAP;AACH;AACJ,KATD,MAUK,IAAI,QAAQ,OAAZ,EAAqB;AACtB,gBAAQ,GAAR,CAAY,IAAI,OAAhB;AACA;AACH;AACD,QAAI,OAAO,SAAS,CAAT,EAAY,EAAZ,CAAX;AACA,YAAQ,GAAR,CAAY,8CAA8C,KAAK,OAAO,IAAP,CAAY,UAAU,OAAtB,EAA+B,IAA/B,GAAsC,IAAtC,CAA2C,IAA3C,CAAL,CAA9C,GAAuG,mQAAvG,GAA6W,IAAI,OAAjX,GAA2X,GAA3X,GAAiY,OAAO,IAAP,CAAY,SAAZ,EAAuB,IAAvB,CAAjY,GAAga,IAA5a;AACH;AACD","file":"bin-compiled.js","sourcesContent":["\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar minimist = require(\"minimist\");\nvar wordwrap = require(\"wordwrap\");\nvar hasUnicode = require(\"has-unicode\");\nvar path_1 = require(\"path\");\nvar chalk = require(\"chalk\");\nvar updateNotifier = require(\"update-notifier\");\nvar extend = require(\"xtend\");\nvar events_1 = require(\"events\");\nvar cli_1 = require(\"./support/cli\");\nvar aliases_1 = require(\"./aliases\");\nvar pkg = require('../package.json');\nvar unicodeConfig = process.env['TYPINGS_CONFIG_UNICODE'] || process.env['NPM_CONFIG_UNICODE'];\nvar argv = minimist(process.argv.slice(2), {\n    boolean: ['version', 'save', 'saveDev', 'savePeer', 'global', 'verbose', 'production', 'unicode'],\n    string: ['cwd', 'out', 'name', 'source', 'offset', 'limit', 'sort', 'loglevel'],\n    alias: {\n        global: ['G'],\n        version: ['v'],\n        save: ['S'],\n        saveDev: ['save-dev', 'D'],\n        savePeer: ['savePeer', 'P'],\n        verbose: ['V'],\n        out: ['o'],\n        help: ['h']\n    },\n    default: {\n        unicode: unicodeConfig ? isTrue(unicodeConfig) : hasUnicode(),\n        production: process.env['NODE_ENV'] === 'production'\n    }\n});\nfunction isTrue(value) {\n    return value === '1' || value === 'true';\n}\nvar cwd = argv.cwd ? path_1.resolve(argv.cwd) : process.cwd();\nvar emitter = new events_1.EventEmitter();\nvar args = extend(argv, { emitter: emitter, cwd: cwd });\nif (argv.loglevel) {\n    cli_1.setLoglevel(argv.loglevel);\n}\nupdateNotifier({ pkg: pkg }).notify();\nexec(args);\nemitter.on('enoent', function (_a) {\n    var path = _a.path;\n    cli_1.logWarning(\"Path \\\"\" + path + \"\\\" is missing\", 'enoent');\n});\nemitter.on('hastypings', function (_a) {\n    var name = _a.name, typings = _a.typings;\n    cli_1.logWarning(\"Typings for \\\"\" + name + \"\\\" already exist in \\\"\" + path_1.relative(cwd, typings) + \"\\\". You should \" +\n        \"let TypeScript resolve the packaged typings and uninstall the copy installed by Typings\", 'hastypings');\n});\nemitter.on('postmessage', function (_a) {\n    var message = _a.message, name = _a.name;\n    cli_1.logInfo(name + \": \" + message, 'postmessage');\n});\nemitter.on('badlocation', function (_a) {\n    var raw = _a.raw;\n    cli_1.logWarning(\"\\\"\" + raw + \"\\\" is mutable and may change, consider specifying a commit hash\", 'badlocation');\n});\nemitter.on('deprecated', function (_a) {\n    var date = _a.date, raw = _a.raw, parent = _a.parent;\n    if (parent == null || parent.raw == null) {\n        cli_1.logWarning(date.toLocaleDateString() + \": \\\"\" + raw + \"\\\" is deprecated (updated, replaced or removed)\", 'deprecated');\n    }\n});\nemitter.on('prune', function (_a) {\n    var name = _a.name, global = _a.global, resolution = _a.resolution;\n    var suffix = chalk.gray(\" (\" + resolution + \")\" + (global ? ' (global)' : ''));\n    cli_1.logInfo(\"\" + name + suffix, 'prune');\n});\nemitter.on('resolve', function (_a) {\n    var src = _a.src, name = _a.name;\n    cli_1.setStatus(\"Resolving \\\"\" + name + \"\\\" from \\\"\" + src + \"\\\"\");\n});\nemitter.on('resolved', function (_a) {\n    var name = _a.name;\n    cli_1.setStatus(\"Resolved \\\"\" + name + \"\\\"\");\n});\nemitter.on('compiledependency', function (_a) {\n    var name = _a.name;\n    cli_1.setStatus(\"Compiling \\\"\" + name + \"\\\"\");\n});\nfunction exec(options) {\n    if (options._.length) {\n        var command = aliases_1.aliases[options._[0]];\n        var args_1 = options._.slice(1);\n        if (command != null) {\n            if (options.help) {\n                return console.log(command.help());\n            }\n            return cli_1.handle(command.exec(args_1, options), options);\n        }\n    }\n    else if (options.version) {\n        console.log(pkg.version);\n        return;\n    }\n    var wrap = wordwrap(4, 80);\n    console.log(\"\\nUsage: typings <command>\\n\\nCommands:\\n\" + wrap(Object.keys(aliases_1.aliases).sort().join(', ')) + \"\\n\\ntypings <command> -h    Get help for <command>\\ntypings <command> -V    Enable verbose logging\\n\\ntypings --version       Print the CLI version\\n  [--loglevel] <level>  Set the log level (\\\"debug\\\", info\\\", \\\"warn\\\", \\\"error\\\" or \\\"silent\\\")\\n\\ntypings@\" + pkg.version + \" \" + path_1.join(__dirname, '..') + \"\\n\");\n}\n//# sourceMappingURL=bin.js.map"]}
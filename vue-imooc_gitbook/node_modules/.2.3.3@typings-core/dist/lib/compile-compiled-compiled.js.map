{"version":3,"sources":["compile-compiled.js"],"names":[],"mappings":"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","file":"compile-compiled-compiled.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ts = require(\"typescript\");\nvar extend = require(\"xtend\");\nvar has = require(\"has\");\nvar path_1 = require(\"path\");\nvar fs_1 = require(\"../utils/fs\");\nvar path_2 = require(\"../utils/path\");\nvar path_3 = require(\"../utils/path\");\nvar references_1 = require(\"../utils/references\");\nvar config_1 = require(\"../utils/config\");\nvar error_1 = require(\"./error\");\nfunction compile(tree, resolutions, options) {\n    var name = options.name,\n        cwd = options.cwd,\n        global = options.global;\n    var fileCache = {};\n    if (tree.global && !global) {\n        return Promise.reject(new error_1.default(\"Unable to compile \\\"\" + name + \"\\\", the typings are meant to be installed as \" + \"global but attempted to be compiled as an external module\"));\n    }\n    for (var _i = 0, resolutions_1 = resolutions; _i < resolutions_1.length; _i++) {\n        var resolution = resolutions_1[_i];\n        if (resolution !== 'main' && resolution !== 'browser') {\n            return Promise.reject(new error_1.default(\"Unable to resolve using \\\"\" + resolution + \"\\\" setting\"));\n        }\n    }\n    return Promise.all(resolutions.map(function (resolution) {\n        var resolved = {};\n        var imported = {};\n        return compileDependencyTree(tree, extend(options, {\n            resolution: resolution,\n            fileCache: fileCache,\n            imported: imported,\n            resolved: resolved\n        }));\n    })).then(function (output) {\n        var results = {};\n        for (var i = 0; i < output.length; i++) {\n            results[resolutions[i]] = output[i];\n        }\n        return {\n            cwd: cwd,\n            name: name,\n            tree: tree,\n            global: global,\n            results: results\n        };\n    });\n}\nexports.compile = compile;\nfunction resolveImportFrom(from, to) {\n    return path_3.isModuleName(to) ? to : path_3.resolveFrom(from, to);\n}\nfunction resolveOverride(src, to, tree) {\n    if (typeof to === 'string') {\n        if (path_3.isModuleName(to)) {\n            var _a = getModuleNameParts(to, tree),\n                moduleName = _a[0],\n                modulePath = _a[1];\n            return modulePath ? path_3.normalizeToDefinition(to) : moduleName;\n        }\n        return path_3.resolveFrom(src, path_3.normalizeToDefinition(to));\n    }\n    return to ? src : undefined;\n}\nfunction getStringifyOptions(tree, options, parent) {\n    var overrides = {};\n    var isTypings = typeof tree.typings === 'string';\n    var main = isTypings ? tree.typings : tree.main;\n    var browser = isTypings ? tree.browserTypings : tree.browser;\n    if (options.resolution === 'browser' && browser) {\n        if (typeof browser === 'string') {\n            var mainDefinition = path_3.resolveFrom(tree.src, path_3.normalizeToDefinition(main));\n            var browserDefinition = path_3.resolveFrom(tree.src, path_3.normalizeToDefinition(browser));\n            overrides[mainDefinition] = browserDefinition;\n        } else {\n            for (var _i = 0, _a = Object.keys(browser); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var from = resolveOverride(tree.src, key, tree);\n                var to = resolveOverride(tree.src, browser[key], tree);\n                overrides[from] = to;\n            }\n        }\n    }\n    var referenced = {};\n    var dependencies = {};\n    var entry = main == null ? undefined : path_3.normalizeToDefinition(main);\n    var prefix = \"\" + (parent ? parent.prefix : '') + config_1.DEPENDENCY_SEPARATOR + options.name;\n    return extend(options, {\n        tree: tree,\n        entry: entry,\n        prefix: prefix,\n        overrides: overrides,\n        referenced: referenced,\n        dependencies: dependencies,\n        parent: parent\n    });\n}\nfunction compileDependencyTree(tree, options) {\n    var stringifyOptions = getStringifyOptions(tree, options, undefined);\n    var contents = [];\n    var name = options.name,\n        global = options.global,\n        resolution = options.resolution;\n    options.emitter.emit('compiledependency', { tree: tree, global: global, name: name, resolution: resolution });\n    if (Array.isArray(tree.files)) {\n        for (var _i = 0, _a = tree.files; _i < _a.length; _i++) {\n            var file = _a[_i];\n            contents.push(stringifyDependencyImport(path_3.resolveFrom(tree.src, file), DependencyImport.ALL_PATHS, false, stringifyOptions));\n        }\n    }\n    if (stringifyOptions.entry) {\n        contents.push(stringifyDependencyImport(path_3.resolveFrom(tree.src, stringifyOptions.entry), DependencyImport.ALL_PATHS, true, stringifyOptions));\n    }\n    if (contents.length === 0) {\n        contents.push(stringifyDependencyImport(path_3.resolveFrom(tree.src, 'index.d.ts'), DependencyImport.DEFAULT_ONLY, true, stringifyOptions));\n    }\n    return Promise.all(contents).then(function (out) {\n        return out.join(path_2.EOL);\n    });\n}\nfunction cachedReadFileFrom(path, options) {\n    if (!has(options.fileCache, path)) {\n        options.fileCache[path] = fs_1.readFileFrom(path);\n    }\n    return options.fileCache[path];\n}\nfunction cachedStringifyOptions(name, compileOptions, options) {\n    if (!has(options.dependencies, name)) {\n        var branch = options.tree.dependencies[name];\n        if (branch) {\n            options.dependencies[name] = getStringifyOptions(branch, compileOptions, options);\n        } else {\n            options.dependencies[name] = null;\n        }\n    }\n    return options.dependencies[name];\n}\nfunction getPath(path, options) {\n    if (has(options.overrides, path)) {\n        return options.overrides[path];\n    }\n    return path;\n}\nvar DependencyImport;\n(function (DependencyImport) {\n    DependencyImport[DependencyImport[\"DEFAULT_ONLY\"] = 0] = \"DEFAULT_ONLY\";\n    DependencyImport[DependencyImport[\"SUFFIXES_ONLY\"] = 1] = \"SUFFIXES_ONLY\";\n    DependencyImport[DependencyImport[\"ALL_PATHS\"] = 2] = \"ALL_PATHS\";\n})(DependencyImport || (DependencyImport = {}));\nfunction getDependencyImportPaths(importPath, mode) {\n    var paths = [];\n    if (mode === DependencyImport.DEFAULT_ONLY || mode === DependencyImport.ALL_PATHS) {\n        paths.push(importPath);\n    }\n    if (mode === DependencyImport.SUFFIXES_ONLY || mode === DependencyImport.ALL_PATHS) {\n        paths.push(path_3.appendToPath(importPath, '.d.ts'), path_3.appendToPath(importPath, '/index.d.ts'));\n    }\n    return paths;\n}\nfunction readDependencyImport(importPath, mode, isEntry, stringifyOptions, parent) {\n    function attempt(cause, paths, index, isEntry, options) {\n        var cwd = options.cwd,\n            tree = options.tree,\n            resolution = options.resolution,\n            fileCache = options.fileCache,\n            resolved = options.resolved,\n            imported = options.imported,\n            emitter = options.emitter,\n            meta = options.meta;\n        if (index >= paths.length) {\n            var authorPhrase = options.parent ? \"The author of \\\"\" + options.parent.name + \"\\\" needs to\" : 'You should';\n            var relativePath = path_3.isModuleName(importPath) ? importPath : path_3.relativeTo(options.tree.src, importPath);\n            if (isEntry) {\n                return Promise.reject(new error_1.default(\"Unable to read typings for \\\"\" + options.name + \"\\\". \" + (authorPhrase + \" check the entry paths in \\\"\" + path_1.basename(options.tree.src) + \"\\\" are up to date\"), cause));\n            }\n            return Promise.reject(new error_1.default(\"Unable to read \\\"\" + relativePath + \"\\\" from \\\"\" + options.name + \"\\\". \" + (authorPhrase + \" validate all import paths are accurate (case sensitive and relative)\"), cause));\n        }\n        var path = getPath(paths[index], options);\n        if (path_3.isModuleName(path)) {\n            var _a = getModuleNameParts(path, tree),\n                moduleName = _a[0],\n                modulePath = _a[1];\n            var childOptions = cachedStringifyOptions(moduleName, {\n                cwd: cwd,\n                resolution: resolution,\n                fileCache: fileCache,\n                emitter: emitter,\n                imported: imported,\n                resolved: resolved,\n                name: moduleName,\n                global: false,\n                meta: meta\n            }, options);\n            if (!childOptions) {\n                stringifyOptions.resolved[getCachePath(importPath, stringifyOptions, false)] = path;\n                return Promise.resolve(null);\n            }\n            var paths_1 = getDependencyImportPaths(path_3.resolveFrom(childOptions.tree.src, modulePath || childOptions.entry || 'index.d.ts'), modulePath ? DependencyImport.SUFFIXES_ONLY : childOptions.entry ? DependencyImport.ALL_PATHS : DependencyImport.DEFAULT_ONLY);\n            return attempt(null, paths_1, 0, true, childOptions);\n        }\n        var cached = has(options.imported, path);\n        if (!cached) {\n            options.imported[path] = fs_1.readFileFrom(path).then(function (contents) {\n                var fileInfo = ts.preProcessFile(contents);\n                var sourceFile = ts.createSourceFile(path, contents.replace(references_1.REFERENCE_REGEXP, ''), ts.ScriptTarget.Latest, true);\n                var modulePath = getCachePath(path, options, true);\n                var moduleInfo = { path: path, modulePath: modulePath, isEntry: isEntry, parent: parent, sourceFile: sourceFile, options: options, fileInfo: fileInfo };\n                return moduleInfo;\n            }, function (err) {\n                if (err.code === 'ENOENT' || err.code === 'ENOTDIR' || err.code === 'EISDIR' || err.code === 'EINVALIDSTATUS') {\n                    return attempt(err, paths, index + 1, isEntry, options);\n                }\n                return Promise.reject(err);\n            });\n        }\n        return options.imported[path].then(function (moduleInfo) {\n            if (moduleInfo) {\n                stringifyOptions.resolved[getCachePath(importPath, stringifyOptions, false)] = moduleInfo.modulePath;\n            }\n            return !cached ? moduleInfo : undefined;\n        });\n    }\n    return attempt(null, getDependencyImportPaths(importPath, mode), 0, isEntry, stringifyOptions);\n}\nfunction stringifyDependencyImport(importPath, mode, isEntry, options, parent) {\n    return readDependencyImport(importPath, mode, isEntry, options, parent).then(function (info) {\n        return info ? stringifyDependencyPath(info) : undefined;\n    });\n}\nfunction getCachePath(originalPath, options, strip) {\n    var path = strip ? path_3.pathFromDefinition(originalPath) : originalPath;\n    if (path_3.isModuleName(path)) {\n        return path_3.normalizeSlashes(\"\" + options.prefix + config_1.DEPENDENCY_SEPARATOR + path);\n    }\n    return path_3.normalizeSlashes(path_1.join(options.prefix, path_3.relativeTo(options.tree.src, path)));\n}\nfunction stringifyDependencyPath(moduleInfo) {\n    var path = moduleInfo.path,\n        options = moduleInfo.options,\n        sourceFile = moduleInfo.sourceFile,\n        fileInfo = moduleInfo.fileInfo;\n    var tree = options.tree,\n        global = options.global,\n        resolution = options.resolution,\n        name = options.name,\n        prefix = options.prefix,\n        emitter = options.emitter;\n    emitter.emit('compile', { name: name, prefix: prefix, path: path, tree: tree, resolution: resolution });\n    var importedFiles = fileInfo.importedFiles.map(function (x) {\n        return resolveImportFrom(path, x.fileName);\n    });\n    var referencedFiles = fileInfo.referencedFiles.map(function (x) {\n        return path_3.resolveFrom(path, x.fileName);\n    });\n    if (global) {\n        Object.keys(tree.dependencies).forEach(function (x) {\n            return importedFiles.push(x);\n        });\n    }\n    var imports = importedFiles.map(function (importedFile) {\n        var mode = path_3.isModuleName(importedFile) ? DependencyImport.DEFAULT_ONLY : DependencyImport.SUFFIXES_ONLY;\n        return stringifyDependencyImport(importedFile, mode, false, options, moduleInfo);\n    });\n    return Promise.all(imports).then(function (imports) {\n        var stringified = stringifyModuleFile(moduleInfo);\n        for (var _i = 0, referencedFiles_1 = referencedFiles; _i < referencedFiles_1.length; _i++) {\n            var reference = referencedFiles_1[_i];\n            emitter.emit('reference', { name: name, prefix: prefix, path: path, reference: reference, tree: tree, resolution: resolution });\n        }\n        var contents = imports.filter(function (x) {\n            return x != null;\n        }).concat(stringified).join(path_2.EOL);\n        emitter.emit('compiled', { name: name, prefix: prefix, path: path, tree: tree, resolution: resolution, contents: contents });\n        return contents;\n    });\n}\nfunction getModuleNameParts(name, tree) {\n    var parts = name.split(/[\\\\\\/]/g);\n    var len = parts.length;\n    while (len) {\n        len--;\n        var name_1 = parts.slice(0, len).join('/');\n        var path = parts.slice(len).join('/');\n        if (tree.dependencies[name_1]) {\n            return [name_1, path];\n        }\n    }\n    return [parts.join('/'), null];\n}\nfunction getImportPath(path, options) {\n    return options.resolved[getCachePath(path, options, false)];\n}\nfunction stringifyModuleFile(info) {\n    var options = info.options,\n        modulePath = info.modulePath;\n    var tree = options.tree,\n        name = options.name,\n        prefix = options.prefix,\n        parent = options.parent,\n        cwd = options.cwd,\n        global = options.global;\n    var source = path_3.isHttp(info.path) ? info.path : path_3.normalizeSlashes(path_1.relative(cwd, info.path));\n    var meta = options.meta ? \"// Generated by \" + config_1.PROJECT_NAME + path_2.EOL + \"// Source: \" + source + path_2.EOL : '';\n    if (global) {\n        if (ts.isExternalModule(info.sourceFile)) {\n            throw new error_1.default(\"Attempted to compile \\\"\" + name + \"\\\" as a global \" + \"module, but it looks like an external module. \" + \"You'll need to remove the global option to continue.\");\n        }\n        return \"\" + meta + path_2.normalizeEOL(info.sourceFile.getText().trim(), path_2.EOL) + path_2.EOL;\n    } else {\n        if (!ts.isExternalModule(info.sourceFile) && !(info.parent && ts.isExternalModule(info.parent.sourceFile))) {\n            throw new error_1.default(\"Attempted to compile \\\"\" + name + \"\\\" as an external module, \" + \"but it looks like a global module. \" + \"You'll need to enable the global option to continue.\");\n        }\n    }\n    var hasExports = false;\n    var hasDefaultExport = false;\n    var hasExportEquals = false;\n    var hasLocalImports = false;\n    var wasDeclared = false;\n    function replacer(node) {\n        if (node.kind === ts.SyntaxKind.ExportAssignment) {\n            hasDefaultExport = !node.isExportEquals;\n            hasExportEquals = !hasDefaultExport;\n        } else if (node.kind === ts.SyntaxKind.ExportDeclaration) {\n            hasExports = true;\n        } else if (node.kind === ts.SyntaxKind.ExportSpecifier) {\n            hasDefaultExport = hasDefaultExport || node.name.getText() === 'default';\n        }\n        var flags = ts.getCombinedModifierFlags(node);\n        hasExports = hasExports || !!(flags & ts.ModifierFlags.Export);\n        hasDefaultExport = hasDefaultExport || !!(flags & ts.ModifierFlags.Default);\n        if (node.kind === ts.SyntaxKind.StringLiteral && (node.parent.kind === ts.SyntaxKind.ExportDeclaration || node.parent.kind === ts.SyntaxKind.ImportDeclaration || node.parent.kind === ts.SyntaxKind.ModuleDeclaration)) {\n            hasLocalImports = hasLocalImports || !path_3.isModuleName(node.text);\n            return \" '\" + getImportPath(resolveImportFrom(info.path, node.text), options) + \"'\";\n        }\n        if (node.kind === ts.SyntaxKind.DeclareKeyword) {\n            wasDeclared = true;\n            return info.sourceFile.text.slice(node.getFullStart(), node.getStart());\n        }\n        if (node.kind === ts.SyntaxKind.ExternalModuleReference) {\n            var requirePath = getImportPath(resolveImportFrom(info.path, node.expression.text), options);\n            return \" require('\" + requirePath + \"')\";\n        }\n    }\n    function read(start, end) {\n        var text = info.sourceFile.text.slice(start, end);\n        if (start === 0) {\n            return text.replace(/^\\s+$/, '');\n        }\n        if (end == null) {\n            return text.replace(/\\s+$/, '');\n        }\n        if (wasDeclared) {\n            wasDeclared = false;\n            return text.replace(/^\\s+/, '');\n        }\n        return text;\n    }\n    var moduleText = path_2.normalizeEOL(processTree(info.sourceFile, replacer, read), path_2.EOL);\n    var moduleName = parent && parent.global ? name : modulePath;\n    if (info.isEntry && !hasLocalImports) {\n        return meta + declareText(parent ? moduleName : name, moduleText);\n    }\n    var prettyPath = path_3.normalizeSlashes(path_1.join(name, path_3.relativeTo(tree.src, path_3.pathFromDefinition(info.path))));\n    var declared = meta + declareText(modulePath, moduleText);\n    function alias(name) {\n        var imports = [];\n        if (hasExportEquals) {\n            imports.push(\"import main = require('\" + modulePath + \"');\");\n            imports.push(\"export = main;\");\n        } else {\n            if (hasExports) {\n                imports.push(\"export * from '\" + modulePath + \"';\");\n            }\n            if (hasDefaultExport) {\n                imports.push(\"export { default } from '\" + modulePath + \"';\");\n            }\n        }\n        if (imports.length === 0) {\n            return '';\n        }\n        return declareText(name, imports.join(path_2.EOL));\n    }\n    if (info.isEntry && !parent) {\n        return declared + alias(prettyPath) + alias(name);\n    }\n    return declared + (parent ? '' : alias(prettyPath));\n}\nfunction declareText(name, text) {\n    return \"declare module '\" + name + \"' {\" + (text ? path_2.EOL + text + path_2.EOL : '') + \"}\" + path_2.EOL;\n}\nfunction processTree(sourceFile, replacer, reader) {\n    var code = '';\n    var position = 0;\n    function skip(node) {\n        position = node.end;\n    }\n    function readThrough(node) {\n        if (node.pos > position) {\n            code += reader(position, node.pos);\n            position = node.pos;\n        }\n    }\n    function visit(node) {\n        readThrough(node);\n        var replacement = replacer(node);\n        if (replacement != null) {\n            code += replacement;\n            skip(node);\n        } else {\n            ts.forEachChild(node, visit);\n        }\n    }\n    visit(sourceFile);\n    code += reader(position);\n    return code;\n}\n//# sourceMappingURL=compile.js.map\n\n//# sourceMappingURL=compile-compiled.js.map"]}
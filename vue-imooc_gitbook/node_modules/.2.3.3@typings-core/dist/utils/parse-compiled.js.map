{"version":3,"sources":["../../../typings/node_modules/typings-core/dist/utils/parse.js"],"names":[],"mappings":"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","file":"parse-compiled.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar invariant = require(\"invariant\");\nvar url_1 = require(\"url\");\nvar path_1 = require(\"path\");\nvar config_1 = require(\"./config\");\nvar path_2 = require(\"./path\");\nvar rc_1 = require(\"./rc\");\nfunction gitFromPath(src) {\n    var index = src.indexOf('#');\n    var sha = index === -1 ? 'master' : src.substr(index + 1);\n    var segments = index === -1 ? src.split('/') : src.substr(0, index).split('/');\n    var org = segments.shift();\n    var repo = segments.shift();\n    var path = segments.join('/');\n    var name;\n    if (segments.length === 0) {\n        path = config_1.CONFIG_FILE;\n    }\n    else if (path_2.isDefinition(path)) {\n        name = path_1.basename(path_2.pathFromDefinition(path));\n    }\n    else if (segments[segments.length - 1] !== config_1.CONFIG_FILE) {\n        path += \"/\" + config_1.CONFIG_FILE;\n    }\n    return { org: org, repo: repo, path: path, sha: sha, name: name };\n}\nfunction splitProtocol(raw) {\n    var index = raw.indexOf(':');\n    if (index === -1) {\n        return [undefined, raw];\n    }\n    return [raw.substr(0, index), path_2.normalizeSlashes(raw.substr(index + 1))];\n}\nfunction parseDependency(raw) {\n    var _a = splitProtocol(raw), type = _a[0], src = _a[1];\n    if (type === 'file') {\n        var location = path_1.normalize(src);\n        var filename = path_1.basename(location);\n        var name = path_2.isDefinition(filename) ? path_2.pathFromDefinition(filename) : undefined;\n        invariant(filename === config_1.CONFIG_FILE || path_2.isDefinition(filename), \"Only \\\".d.ts\\\" and \\\"\" + config_1.CONFIG_FILE + \"\\\" files are supported\");\n        return {\n            raw: raw,\n            type: type,\n            meta: {\n                name: name,\n                path: location\n            },\n            location: location\n        };\n    }\n    if (type === 'github') {\n        var meta = gitFromPath(src);\n        var org = meta.org, repo = meta.repo, path = meta.path, sha = meta.sha;\n        var location = \"https://raw.githubusercontent.com/\" + org + \"/\" + repo + \"/\" + sha + \"/\" + path;\n        return {\n            raw: raw,\n            meta: meta,\n            type: type,\n            location: location\n        };\n    }\n    if (type === 'bitbucket') {\n        var meta = gitFromPath(src);\n        var org = meta.org, repo = meta.repo, path = meta.path, sha = meta.sha;\n        var location = \"https://bitbucket.org/\" + org + \"/\" + repo + \"/raw/\" + sha + \"/\" + path;\n        return {\n            raw: raw,\n            meta: meta,\n            type: type,\n            location: location\n        };\n    }\n    if (type === 'jspm') {\n        return {\n            raw: raw,\n            type: 'jspm',\n            location: src,\n            meta: {\n                name: src\n            }\n        };\n    }\n    if (type === 'npm') {\n        var parts = src.split('/');\n        var isScoped = parts.length > 0 && parts[0].charAt(0) === '@';\n        var hasPath = isScoped ? parts.length > 2 : parts.length > 1;\n        if (!hasPath) {\n            parts.push('package.json');\n        }\n        return {\n            raw: raw,\n            type: 'npm',\n            meta: {\n                name: isScoped ? parts.slice(0, 2).join('/') : parts[0],\n                path: path_1.join.apply(void 0, parts.slice(isScoped ? 2 : 1))\n            },\n            location: path_1.join.apply(void 0, parts)\n        };\n    }\n    if (type === 'bower') {\n        var parts = src.split('/');\n        if (parts.length === 1) {\n            parts.push('bower.json');\n        }\n        return {\n            raw: raw,\n            type: 'bower',\n            meta: {\n                name: parts[0],\n                path: path_1.join.apply(void 0, parts.slice(1))\n            },\n            location: path_1.join.apply(void 0, parts)\n        };\n    }\n    if (type === 'http' || type === 'https') {\n        return {\n            raw: raw,\n            type: type,\n            meta: {},\n            location: raw\n        };\n    }\n    if (type === 'registry') {\n        var parts = /^([^\\/]+)\\/(.+?)(?:@(.*?)|#(.*?))?$/.exec(src);\n        if (parts == null) {\n            throw new TypeError(\"Unable to parse: \" + raw);\n        }\n        var source = parts[1], name = parts[2], version = parts[3], tag = parts[4];\n        if (version != null && tag != null) {\n            throw new TypeError(\"Unable to use tag and version together: \" + raw);\n        }\n        var path = \"entries/\" + encodeURIComponent(source) + \"/\" + encodeURIComponent(name);\n        if (tag) {\n            path += \"/tags/\" + encodeURIComponent(tag);\n        }\n        else if (version) {\n            path += \"/versions/\" + encodeURIComponent(version) + \"/latest\";\n        }\n        else {\n            path += '/versions/latest';\n        }\n        return {\n            raw: raw,\n            type: type,\n            meta: {\n                source: source,\n                name: name,\n                version: version,\n                tag: tag\n            },\n            location: path_2.joinUrl(rc_1.default.registryURL, path)\n        };\n    }\n    throw new TypeError(\"Unknown dependency: \" + raw);\n}\nexports.parseDependency = parseDependency;\nfunction resolveDependency(raw, filename) {\n    var _a = parseDependency(raw), type = _a.type, meta = _a.meta, location = _a.location;\n    if (type === 'http' || type === 'https') {\n        return url_1.resolve(location, filename);\n    }\n    if (type === 'github' || type === 'bitbucket') {\n        var org = meta.org, repo = meta.repo, sha = meta.sha;\n        var path = path_1.join(path_1.dirname(meta.path), filename);\n        return buildDependencyExpression(type, { org: org, repo: repo, sha: sha, path: path });\n    }\n    if (type === 'npm' || type === 'bower') {\n        var name = meta.name;\n        var path = path_1.join(path_1.dirname(meta.path), filename);\n        return buildDependencyExpression(type, { name: name, path: path });\n    }\n    if (type === 'file') {\n        var path = path_1.join(location, filename);\n        return buildDependencyExpression(type, { path: path });\n    }\n    throw new TypeError(\"Unable to resolve dependency from \\\"\" + raw + \"\\\"\");\n}\nexports.resolveDependency = resolveDependency;\nfunction parseDependencyExpression(raw, options) {\n    var _a = /^(?:([^=!:#]+)=)?(?:([\\w]+\\:.+)|((?:[\\w]+\\~)?.+))$/.exec(raw), name = _a[1], scheme = _a[2], registry = _a[3];\n    return {\n        name: name || options.name,\n        location: scheme || expandRegistry(registry, options)\n    };\n}\nexports.parseDependencyExpression = parseDependencyExpression;\nfunction buildDependencyExpression(type, meta) {\n    if (type === 'github' || type === 'bitbucket') {\n        var org = meta.org, repo = meta.repo, sha = meta.sha;\n        var resolvedPath = path_2.normalizeSlashes(meta.path);\n        return type + \":\" + org + \"/\" + repo + \"/\" + resolvedPath + (sha === 'master' ? '' : '#' + sha);\n    }\n    if (type === 'npm' || type === 'bower') {\n        var path = meta.path;\n        var resolvedPath = path ? \"/\" + path_2.normalizeSlashes(path) : '';\n        return type + \":\" + meta.name + resolvedPath;\n    }\n    if (type === 'file') {\n        return \"file:\" + path_2.normalizeSlashes(meta.path);\n    }\n    throw new TypeError(\"Unable to expand dependency type: \\\"\" + type + \"\\\"\");\n}\nexports.buildDependencyExpression = buildDependencyExpression;\nfunction expandRegistry(raw, options) {\n    if (options === void 0) { options = {}; }\n    if (typeof raw !== 'string') {\n        throw new TypeError(\"Expected registry name to be a string, not \" + typeof raw);\n    }\n    var indexOf = raw.indexOf('~');\n    var source = options.source || rc_1.default.defaultSource;\n    var name;\n    if (indexOf === -1) {\n        name = raw;\n    }\n    else {\n        source = raw.substr(0, indexOf);\n        name = raw.substr(indexOf + 1);\n    }\n    return \"registry:\" + source + \"/\" + name;\n}\nexports.expandRegistry = expandRegistry;\n//# sourceMappingURL=parse.js.map"]}
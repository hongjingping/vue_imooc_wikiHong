{"version":3,"sources":["short-compiled.js"],"names":[],"mappings":"AAAA,IAAI,QAAQ,QAAQ,KAAR,CAAZ;AACA,IAAI,OAAO,QAAQ,MAAR,CAAX;;AAEA,KAAK,oBAAL,EAA2B,UAAU,CAAV,EAAa;AACpC,MAAE,IAAF,CAAO,CAAP;AACA,MAAE,SAAF,CAAY,MAAM,CAAC,OAAD,CAAN,CAAZ,EAA8B,EAAE,GAAG,GAAL,EAAU,GAAG,EAAb,EAA9B;AACA,MAAE,SAAF,CAAY,MAAM,CAAC,MAAD,EAAS,KAAT,CAAN,CAAZ,EAAoC,EAAE,GAAG,IAAL,EAAW,GAAG,IAAd,EAAoB,GAAG,GAAvB,EAA4B,GAAG,EAA/B,EAApC;AACH,CAJD;;AAMA,KAAK,OAAL,EAAc,UAAU,CAAV,EAAa;AACvB,MAAE,SAAF,CAAY,MAAM,CAAC,IAAD,CAAN,CAAZ,EAA2B,EAAE,GAAG,IAAL,EAAW,GAAG,EAAd,EAA3B,EAA+C,eAA/C;AACA,MAAE,SAAF,CAAY,MAAM,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,CAAN,CAAZ,EAA0C,EAAE,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,CAAL,EAA1C,EAAwE,MAAxE;AACA,MAAE,SAAF,CAAY,MAAM,CAAC,OAAD,CAAN,CAAZ,EAA8B,EAAE,GAAG,IAAL,EAAW,GAAG,IAAd,EAAoB,GAAG,IAAvB,EAA6B,GAAG,IAAhC,EAAsC,GAAG,EAAzC,EAA9B,EAA6E,OAA7E;AACA,MAAE,SAAF,CAAY,MAAM,CAAC,OAAD,EAAU,MAAV,CAAN,CAAZ,EAAsC,EAAE,GAAG,IAAL,EAAW,GAAG,IAAd,EAAoB,GAAG,IAAvB,EAA6B,GAAG,MAAhC,EAAwC,GAAG,EAA3C,EAAtC,EAAuF,kBAAvF;AACA,MAAE,SAAF,CAAY,MAAM,CAAC,IAAD,EAAO,WAAP,CAAN,CAAZ,EAAwC,EAAE,GAAG,WAAL,EAAkB,GAAG,EAArB,EAAxC,EAAmE,eAAnE;AACA,MAAE,SAAF,CAAY,MAAM,CAAC,IAAD,EAAO,WAAP,EAAoB,IAApB,EAA0B,KAA1B,CAAN,CAAZ,EAAqD,EAAE,GAAG,WAAL,EAAkB,GAAG,GAArB,EAA0B,GAAG,EAA7B,EAArD,EAAwF,gBAAxF;AACA,MAAE,GAAF;AACH,CARD;;AAUA,KAAK,8BAAL,EAAqC,UAAU,CAAV,EAAa;AAC9C,MAAE,IAAF,CAAO,MAAM,CAAC,IAAD,EAAO,WAAP,EAAoB,KAApB,EAA2B,KAA3B,EAAkC,WAAlC,CAAN,CAAP,EAA8D;AAC1D,WAAG,IADuD,EACjD,GAAG,GAD8C,EACzC,GAAG,WADsC;AAE1D,WAAG,CAAC,WAAD;AAFuD,KAA9D;AAIA,MAAE,GAAF;AACH,CAND;;AAQA,KAAK,gBAAL,EAAuB,UAAU,CAAV,EAAa;AAChC,MAAE,SAAF,CAAY,MAAM,CAAC,IAAD,EAAO,WAAP,EAAoB,KAApB,EAA2B,KAA3B,EAAkC,WAAlC,CAAN,CAAZ,EAAmE;AAC/D,WAAG,IAD4D,EACtD,GAAG,GADmD,EAC9C,GAAG,WAD2C;AAE/D,WAAG,CAAC,WAAD;AAF4D,KAAnE;AAIA,MAAE,GAAF;AACH,CAND;;AAQA","file":"short-compiled-compiled.js","sourcesContent":["var parse = require('../');\nvar test = require('tape');\n\ntest('numeric short args', function (t) {\n    t.plan(2);\n    t.deepEqual(parse(['-n123']), { n: 123, _: [] });\n    t.deepEqual(parse(['-123', '456']), { 1: true, 2: true, 3: 456, _: [] });\n});\n\ntest('short', function (t) {\n    t.deepEqual(parse(['-b']), { b: true, _: [] }, 'short boolean');\n    t.deepEqual(parse(['foo', 'bar', 'baz']), { _: ['foo', 'bar', 'baz'] }, 'bare');\n    t.deepEqual(parse(['-cats']), { c: true, a: true, t: true, s: true, _: [] }, 'group');\n    t.deepEqual(parse(['-cats', 'meow']), { c: true, a: true, t: true, s: 'meow', _: [] }, 'short group next');\n    t.deepEqual(parse(['-h', 'localhost']), { h: 'localhost', _: [] }, 'short capture');\n    t.deepEqual(parse(['-h', 'localhost', '-p', '555']), { h: 'localhost', p: 555, _: [] }, 'short captures');\n    t.end();\n});\n\ntest('mixed short bool and capture', function (t) {\n    t.same(parse(['-h', 'localhost', '-fp', '555', 'script.js']), {\n        f: true, p: 555, h: 'localhost',\n        _: ['script.js']\n    });\n    t.end();\n});\n\ntest('short and long', function (t) {\n    t.deepEqual(parse(['-h', 'localhost', '-fp', '555', 'script.js']), {\n        f: true, p: 555, h: 'localhost',\n        _: ['script.js']\n    });\n    t.end();\n});\n\n//# sourceMappingURL=short-compiled.js.map"]}
{"version":3,"sources":["../typings-core/node_modules/touch/node_modules/nopt/node_modules/abbrev/abbrev-compiled-compiled.js"],"names":[],"mappings":"AAAA,OAAO,OAAP,GAAiB,UAAU,OAAO,MAAP,GAAgB,MAA3C;;AAEA,OAAO,WAAP,GAAqB,WAArB;;AAEA,SAAS,WAAT,GAAuB;AACrB,SAAO,cAAP,CAAsB,MAAM,SAA5B,EAAuC,QAAvC,EAAiD;AAC/C,WAAO,YAAY;AACjB,aAAO,OAAO,IAAP,CAAP;AACD,KAH8C;AAI/C,gBAAY,KAJmC,EAI5B,cAAc,IAJc,EAIR,UAAU;AAJF,GAAjD;;AAOA,SAAO,cAAP,CAAsB,OAAO,SAA7B,EAAwC,QAAxC,EAAkD;AAChD,WAAO,YAAY;AACjB,aAAO,OAAO,OAAO,IAAP,CAAY,IAAZ,CAAP,CAAP;AACD,KAH+C;AAIhD,gBAAY,KAJoC,EAI7B,cAAc,IAJe,EAIT,UAAU;AAJD,GAAlD;AAMD;;AAED,SAAS,MAAT,CAAgB,IAAhB,EAAsB;AACpB,MAAI,UAAU,MAAV,KAAqB,CAArB,IAA0B,CAAC,MAAM,OAAN,CAAc,IAAd,CAA/B,EAAoD;AAClD,WAAO,MAAM,SAAN,CAAgB,KAAhB,CAAsB,IAAtB,CAA2B,SAA3B,EAAsC,CAAtC,CAAP;AACD;AACD,OAAK,IAAI,IAAI,CAAR,EAAW,IAAI,KAAK,MAApB,EAA4B,OAAO,EAAxC,EAA4C,IAAI,CAAhD,EAAmD,GAAnD,EAAwD;AACtD,SAAK,CAAL,IAAU,OAAO,KAAK,CAAL,CAAP,KAAmB,QAAnB,GAA8B,KAAK,CAAL,CAA9B,GAAwC,OAAO,KAAK,CAAL,CAAP,CAAlD;AACD;;AAED;AACA,SAAO,KAAK,IAAL,CAAU,OAAV,CAAP;;AAEA;AACA,MAAI,UAAU,EAAd;AAAA,MACI,OAAO,EADX;AAEA,OAAK,IAAI,IAAI,CAAR,EAAW,IAAI,KAAK,MAAzB,EAAiC,IAAI,CAArC,EAAwC,GAAxC,EAA6C;AAC3C,QAAI,UAAU,KAAK,CAAL,CAAd;AAAA,QACI,OAAO,KAAK,IAAI,CAAT,KAAe,EAD1B;AAAA,QAEI,cAAc,IAFlB;AAAA,QAGI,cAAc,IAHlB;AAIA,QAAI,YAAY,IAAhB,EAAsB;AACtB,SAAK,IAAI,IAAI,CAAR,EAAW,KAAK,QAAQ,MAA7B,EAAqC,IAAI,EAAzC,EAA6C,GAA7C,EAAkD;AAChD,UAAI,UAAU,QAAQ,MAAR,CAAe,CAAf,CAAd;AACA,oBAAc,eAAe,YAAY,KAAK,MAAL,CAAY,CAAZ,CAAzC;AACA,oBAAc,eAAe,YAAY,KAAK,MAAL,CAAY,CAAZ,CAAzC;AACA,UAAI,CAAC,WAAD,IAAgB,CAAC,WAArB,EAAkC;AAChC;AACA;AACD;AACF;AACD,WAAO,OAAP;AACA,QAAI,MAAM,EAAV,EAAc;AACZ,cAAQ,OAAR,IAAmB,OAAnB;AACA;AACD;AACD,SAAK,IAAI,IAAI,QAAQ,MAAR,CAAe,CAAf,EAAkB,CAAlB,CAAb,EAAmC,KAAK,EAAxC,EAA4C,GAA5C,EAAiD;AAC/C,cAAQ,CAAR,IAAa,OAAb;AACA,WAAK,QAAQ,MAAR,CAAe,CAAf,CAAL;AACD;AACF;AACD,SAAO,OAAP;AACD;;AAED,SAAS,OAAT,CAAiB,CAAjB,EAAoB,CAApB,EAAuB;AACrB,SAAO,MAAM,CAAN,GAAU,CAAV,GAAc,IAAI,CAAJ,GAAQ,CAAR,GAAY,CAAC,CAAlC;AACD;;AAED;;AAEA","file":"abbrev-compiled-compiled-compiled.js","sourcesContent":["module.exports = exports = abbrev.abbrev = abbrev;\n\nabbrev.monkeyPatch = monkeyPatch;\n\nfunction monkeyPatch() {\n  Object.defineProperty(Array.prototype, 'abbrev', {\n    value: function () {\n      return abbrev(this);\n    },\n    enumerable: false, configurable: true, writable: true\n  });\n\n  Object.defineProperty(Object.prototype, 'abbrev', {\n    value: function () {\n      return abbrev(Object.keys(this));\n    },\n    enumerable: false, configurable: true, writable: true\n  });\n}\n\nfunction abbrev(list) {\n  if (arguments.length !== 1 || !Array.isArray(list)) {\n    list = Array.prototype.slice.call(arguments, 0);\n  }\n  for (var i = 0, l = list.length, args = []; i < l; i++) {\n    args[i] = typeof list[i] === \"string\" ? list[i] : String(list[i]);\n  }\n\n  // sort them lexicographically, so that they're next to their nearest kin\n  args = args.sort(lexSort);\n\n  // walk through each, seeing how much it has in common with the next and previous\n  var abbrevs = {},\n      prev = \"\";\n  for (var i = 0, l = args.length; i < l; i++) {\n    var current = args[i],\n        next = args[i + 1] || \"\",\n        nextMatches = true,\n        prevMatches = true;\n    if (current === next) continue;\n    for (var j = 0, cl = current.length; j < cl; j++) {\n      var curChar = current.charAt(j);\n      nextMatches = nextMatches && curChar === next.charAt(j);\n      prevMatches = prevMatches && curChar === prev.charAt(j);\n      if (!nextMatches && !prevMatches) {\n        j++;\n        break;\n      }\n    }\n    prev = current;\n    if (j === cl) {\n      abbrevs[current] = current;\n      continue;\n    }\n    for (var a = current.substr(0, j); j <= cl; j++) {\n      abbrevs[a] = current;\n      a += current.charAt(j);\n    }\n  }\n  return abbrevs;\n}\n\nfunction lexSort(a, b) {\n  return a === b ? 0 : a > b ? 1 : -1;\n}\n\n//# sourceMappingURL=abbrev-compiled.js.map\n\n//# sourceMappingURL=abbrev-compiled-compiled.js.map"]}
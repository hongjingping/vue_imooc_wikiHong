{"version":3,"sources":["../got/node_modules/timed-out/index.js"],"names":[],"mappings":"AAAA;;AAEA,OAAO,OAAP,GAAiB,UAAU,GAAV,EAAe,IAAf,EAAqB;AACrC,KAAI,IAAI,YAAR,EAAsB;AACrB,SAAO,GAAP;AACA;;AAED,KAAI,SAAS,MAAM,IAAN,IAAc,IAAd,GAAqB,EAAC,QAAQ,IAAT,EAAe,SAAS,IAAxB,EAAlC;AACA,KAAI,OAAO,IAAI,QAAJ,GAAgB,SAAS,IAAI,QAAJ,CAAa,IAAtC,GAA8C,EAAzD;;AAEA,KAAI,OAAO,OAAP,KAAmB,SAAvB,EAAkC;AACjC,MAAI,YAAJ,GAAmB,WAAW,SAAS,cAAT,GAA0B;AACvD,OAAI,KAAJ;AACA,OAAI,IAAI,IAAI,KAAJ,CAAU,oCAAoC,IAA9C,CAAR;AACA,KAAE,IAAF,GAAS,WAAT;AACA,OAAI,IAAJ,CAAS,OAAT,EAAkB,CAAlB;AACA,GALkB,EAKhB,OAAO,OALS,CAAnB;AAMA;;AAED;AACA;AACA,KAAI,EAAJ,CAAO,QAAP,EAAiB,SAAS,MAAT,CAAgB,MAAhB,EAAwB;AACxC;AACA,MAAI,EAAE,OAAO,UAAP,IAAqB,OAAO,WAA9B,CAAJ,EAAgD;AAC/C;AACA;AACA;;AAED,SAAO,IAAP,CAAY,SAAZ,EAAuB,OAAvB;AACA,EARD;;AAUA,UAAS,KAAT,GAAiB;AAChB,MAAI,IAAI,YAAR,EAAsB;AACrB,gBAAa,IAAI,YAAjB;AACA,OAAI,YAAJ,GAAmB,IAAnB;AACA;AACD;;AAED,UAAS,OAAT,GAAmB;AAClB;;AAEA,MAAI,OAAO,MAAP,KAAkB,SAAtB,EAAiC;AAChC;AACA;AACA,OAAI,UAAJ,CAAe,OAAO,MAAtB,EAA8B,SAAS,oBAAT,GAAgC;AAC7D,QAAI,KAAJ;AACA,QAAI,IAAI,IAAI,KAAJ,CAAU,gCAAgC,IAA1C,CAAR;AACA,MAAE,IAAF,GAAS,iBAAT;AACA,QAAI,IAAJ,CAAS,OAAT,EAAkB,CAAlB;AACA,IALD;AAMA;AACD;;AAED,QAAO,IAAI,EAAJ,CAAO,OAAP,EAAgB,KAAhB,CAAP;AACA,CApDD","file":"index-compiled.js","sourcesContent":["'use strict';\n\nmodule.exports = function (req, time) {\n\tif (req.timeoutTimer) {\n\t\treturn req;\n\t}\n\n\tvar delays = isNaN(time) ? time : {socket: time, connect: time};\n\tvar host = req._headers ? (' to ' + req._headers.host) : '';\n\n\tif (delays.connect !== undefined) {\n\t\treq.timeoutTimer = setTimeout(function timeoutHandler() {\n\t\t\treq.abort();\n\t\t\tvar e = new Error('Connection timed out on request' + host);\n\t\t\te.code = 'ETIMEDOUT';\n\t\t\treq.emit('error', e);\n\t\t}, delays.connect);\n\t}\n\n\t// Clear the connection timeout timer once a socket is assigned to the\n\t// request and is connected.\n\treq.on('socket', function assign(socket) {\n\t\t// Socket may come from Agent pool and may be already connected.\n\t\tif (!(socket.connecting || socket._connecting)) {\n\t\t\tconnect();\n\t\t\treturn;\n\t\t}\n\n\t\tsocket.once('connect', connect);\n\t});\n\n\tfunction clear() {\n\t\tif (req.timeoutTimer) {\n\t\t\tclearTimeout(req.timeoutTimer);\n\t\t\treq.timeoutTimer = null;\n\t\t}\n\t}\n\n\tfunction connect() {\n\t\tclear();\n\n\t\tif (delays.socket !== undefined) {\n\t\t\t// Abort the request if there is no activity on the socket for more\n\t\t\t// than `delays.socket` milliseconds.\n\t\t\treq.setTimeout(delays.socket, function socketTimeoutHandler() {\n\t\t\t\treq.abort();\n\t\t\t\tvar e = new Error('Socket timed out on request' + host);\n\t\t\t\te.code = 'ESOCKETTIMEDOUT';\n\t\t\t\treq.emit('error', e);\n\t\t\t});\n\t\t}\n\t}\n\n\treturn req.on('error', clear);\n};\n"]}
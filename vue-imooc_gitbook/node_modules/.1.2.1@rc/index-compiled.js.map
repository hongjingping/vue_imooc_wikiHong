{"version":3,"sources":["../rc/index.js"],"names":[],"mappings":";AACA,IAAI,KAAO,QAAQ,aAAR,CAAX;AACA,IAAI,OAAO,QAAQ,MAAR,EAAgB,IAA3B;AACA,IAAI,aAAa,QAAQ,aAAR,CAAjB;AACA,IAAI,MAAM,MAAV;AACA,IAAI,MAAM,QAAQ,QAAR,KAAqB,OAA/B;AACA,IAAI,OAAO,MACE,QAAQ,GAAR,CAAY,WADd,GAEE,QAAQ,GAAR,CAAY,IAFzB;;AAIA,OAAO,OAAP,GAAiB,UAAU,IAAV,EAAgB,QAAhB,EAA0B,IAA1B,EAAgC,KAAhC,EAAuC;AACtD,MAAG,aAAa,OAAO,IAAvB,EACE,MAAM,IAAI,KAAJ,CAAU,iCAAV,CAAN;AACF,MAAG,CAAC,IAAJ,EACE,OAAO,QAAQ,UAAR,EAAoB,QAAQ,IAAR,CAAa,KAAb,CAAmB,CAAnB,CAApB,CAAP;AACF,aAAW,CACP,aAAa,OAAO,QAApB,GACA,GAAG,IAAH,CAAQ,QAAR,CADA,GACoB,QAFb,KAGJ,EAHP;;AAKA,UAAQ,SAAS,GAAG,KAApB;;AAEA,MAAI,MAAM,GAAG,GAAH,CAAO,OAAO,GAAd,CAAV;;AAEA,MAAI,UAAU,CAAC,QAAD,CAAd;AACA,MAAI,cAAc,EAAlB;AACA,WAAS,aAAT,CAAwB,IAAxB,EAA8B;AAC5B,QAAI,YAAY,OAAZ,CAAoB,IAApB,KAA6B,CAAjC,EAAoC;AACpC,QAAI,aAAa,GAAG,IAAH,CAAQ,IAAR,CAAjB;AACA,QAAI,UAAJ,EAAgB;AACd,cAAQ,IAAR,CAAa,MAAM,UAAN,CAAb;AACA,kBAAY,IAAZ,CAAiB,IAAjB;AACD;AACF;;AAED;AACA,MAAI,CAAC,GAAL,EACC,CAAC,KAAK,GAAL,EAAU,IAAV,EAAgB,QAAhB,CAAD,EACC,KAAK,GAAL,EAAU,OAAO,IAAjB,CADD,EACyB,OADzB,CACiC,aADjC;AAED,MAAI,IAAJ,EACC,CAAC,KAAK,IAAL,EAAW,SAAX,EAAsB,IAAtB,EAA4B,QAA5B,CAAD,EACC,KAAK,IAAL,EAAW,SAAX,EAAsB,IAAtB,CADD,EAEC,KAAK,IAAL,EAAW,MAAM,IAAjB,EAAuB,QAAvB,CAFD,EAGC,KAAK,IAAL,EAAW,MAAM,IAAN,GAAa,IAAxB,CAHD,EAGgC,OAHhC,CAGwC,aAHxC;AAID,gBAAc,GAAG,IAAH,CAAQ,MAAI,IAAJ,GAAS,IAAjB,CAAd;AACA,MAAI,IAAI,MAAR,EAAgB,cAAc,IAAI,MAAlB;AAChB,MAAI,KAAK,MAAT,EAAiB,cAAc,KAAK,MAAnB;;AAEjB,SAAO,WAAW,KAAX,CAAiB,IAAjB,EAAuB,QAAQ,MAAR,CAAe,CAC3C,GAD2C,EAE3C,IAF2C,EAG3C,YAAY,MAAZ,GAAqB,EAAC,SAAS,WAAV,EAAuB,QAAQ,YAAY,YAAY,MAAZ,GAAqB,CAAjC,CAA/B,EAArB,GAA2F,SAHhD,CAAf,CAAvB,CAAP;AAKD,CA3CD;;AA6CA,IAAG,CAAC,OAAO,MAAX,EAAmB;AACjB,UAAQ,GAAR,CACE,KAAK,SAAL,CAAe,OAAO,OAAP,CAAe,QAAQ,IAAR,CAAa,CAAb,CAAf,CAAf,EAAgD,KAAhD,EAAuD,CAAvD,CADF;AAGD","file":"index-compiled.js","sourcesContent":["\nvar cc   = require('./lib/utils')\nvar join = require('path').join\nvar deepExtend = require('deep-extend')\nvar etc = '/etc'\nvar win = process.platform === \"win32\"\nvar home = win\n           ? process.env.USERPROFILE\n           : process.env.HOME\n\nmodule.exports = function (name, defaults, argv, parse) {\n  if('string' !== typeof name)\n    throw new Error('rc(name): name *must* be string')\n  if(!argv)\n    argv = require('minimist')(process.argv.slice(2))\n  defaults = (\n      'string' === typeof defaults\n    ? cc.json(defaults) : defaults\n    ) || {}\n\n  parse = parse || cc.parse\n\n  var env = cc.env(name + '_')\n\n  var configs = [defaults]\n  var configFiles = []\n  function addConfigFile (file) {\n    if (configFiles.indexOf(file) >= 0) return\n    var fileConfig = cc.file(file)\n    if (fileConfig) {\n      configs.push(parse(fileConfig))\n      configFiles.push(file)\n    }\n  }\n\n  // which files do we look at?\n  if (!win)\n   [join(etc, name, 'config'),\n    join(etc, name + 'rc')].forEach(addConfigFile)\n  if (home)\n   [join(home, '.config', name, 'config'),\n    join(home, '.config', name),\n    join(home, '.' + name, 'config'),\n    join(home, '.' + name + 'rc')].forEach(addConfigFile)\n  addConfigFile(cc.find('.'+name+'rc'))\n  if (env.config) addConfigFile(env.config)\n  if (argv.config) addConfigFile(argv.config)\n\n  return deepExtend.apply(null, configs.concat([\n    env,\n    argv,\n    configFiles.length ? {configs: configFiles, config: configFiles[configFiles.length - 1]} : undefined,\n  ]))\n}\n\nif(!module.parent) {\n  console.log(\n    JSON.stringify(module.exports(process.argv[2]), false, 2)\n  )\n}\n"]}
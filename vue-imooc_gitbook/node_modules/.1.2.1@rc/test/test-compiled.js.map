{"version":3,"sources":["../../rc/test/test.js"],"names":[],"mappings":";AACA,IAAI,IAAI,OAAK,KAAK,MAAL,EAAb;AACA,IAAI,SAAS,QAAQ,QAAR,CAAb;;AAEA,QAAQ,GAAR,CAAY,IAAE,YAAd,IAA8B,EAA9B;;AAEA,IAAI,SAAS,QAAQ,KAAR,EAAe,CAAf,EAAkB;AAC7B,UAAQ;AADqB,CAAlB,CAAb;;AAIA,QAAQ,GAAR,CAAY,MAAZ;;AAEA,OAAO,KAAP,CAAa,OAAO,MAApB,EAA4B,IAA5B;AACA,OAAO,KAAP,CAAa,OAAO,SAApB,EAA+B,EAA/B;;AAEA,IAAI,aAAa,QAAQ,KAAR,EAAe,CAAf,EAAkB;AACjC,UAAQ;AADyB,CAAlB,EAEd,EAAE;AACH,UAAQ,KADP;AAED,aAAW,EAFV;AAGD,QAAM;AACJ,YAAQ,EADJ;AAEJ,YAAQ,CAAC,aAAD,EAAgB,aAAhB,EAA+B,IAA/B,CAFJ;AAGJ,cAAU,CAAC,aAAD,EAAgB,gBAAhB;AAHN;AAHL,CAFc,CAAjB;;AAYA,QAAQ,GAAR,CAAY,UAAZ;;AAEA,OAAO,KAAP,CAAa,WAAW,MAAxB,EAAgC,KAAhC;AACA,OAAO,KAAP,CAAa,WAAW,SAAxB,EAAmC,EAAnC;;AAEA,IAAI,KAAK,QAAQ,IAAR,CAAT;AACA,IAAI,OAAO,QAAQ,MAAR,CAAX;AACA,IAAI,SAAS,KAAK,OAAL,CAAa,MAAM,CAAN,GAAU,IAAvB,CAAb;;AAEA,GAAG,aAAH,CAAiB,MAAjB,EAAyB,CACvB,GADuB,EAErB,2BAFqB,EAGrB,kBAHqB,EAIrB,0BAJqB,EAKrB,iBALqB,EAMvB,GANuB,EAOvB,IAPuB,CAOlB,IAPkB,CAAzB;;AASA,IAAI,gBAAgB,QAAQ,KAAR,EAAe,CAAf,EAAkB;AACpC,UAAQ;AAD4B,CAAlB,CAApB;;AAIA,GAAG,UAAH,CAAc,MAAd;;AAEA,QAAQ,GAAR,CAAY,aAAZ;;AAEA,OAAO,KAAP,CAAa,cAAc,MAA3B,EAAmC,KAAnC;AACA,OAAO,KAAP,CAAa,cAAc,SAA3B,EAAsC,EAAtC;;AAEA,OAAO,KAAP,CAAa,cAAc,MAA3B,EAAmC,MAAnC;AACA,OAAO,KAAP,CAAa,cAAc,OAAd,CAAsB,MAAnC,EAA2C,CAA3C;AACA,OAAO,KAAP,CAAa,cAAc,OAAd,CAAsB,CAAtB,CAAb,EAAuC,MAAvC","file":"test-compiled.js","sourcesContent":["\nvar n = 'rc'+Math.random()\nvar assert = require('assert')\n\nprocess.env[n+'_envOption'] = 42\n\nvar config = require('../')(n, {\n  option: true\n})\n\nconsole.log(config)\n\nassert.equal(config.option, true)\nassert.equal(config.envOption, 42)\n\nvar customArgv = require('../')(n, {\n  option: true\n}, { // nopt-like argv\n  option: false,\n  envOption: 24,\n  argv: {\n    remain: [],\n    cooked: ['--no-option', '--envOption', '24'],\n    original: ['--no-option', '--envOption=24']\n  }\n})\n\nconsole.log(customArgv)\n\nassert.equal(customArgv.option, false)\nassert.equal(customArgv.envOption, 24)\n\nvar fs = require('fs')\nvar path = require('path')\nvar jsonrc = path.resolve('.' + n + 'rc');\n\nfs.writeFileSync(jsonrc, [\n  '{',\n    '// json overrides default',\n    '\"option\": false,',\n    '/* env overrides json */',\n    '\"envOption\": 24',\n  '}'\n].join('\\n'));\n\nvar commentedJSON = require('../')(n, {\n  option: true\n})\n\nfs.unlinkSync(jsonrc);\n\nconsole.log(commentedJSON)\n\nassert.equal(commentedJSON.option, false)\nassert.equal(commentedJSON.envOption, 42)\n\nassert.equal(commentedJSON.config, jsonrc)\nassert.equal(commentedJSON.configs.length, 1)\nassert.equal(commentedJSON.configs[0], jsonrc)\n"]}
{"version":3,"sources":["../typings/node_modules/archy/index.js"],"names":[],"mappings":"AAAA,OAAO,OAAP,GAAiB,SAAS,KAAT,CAAgB,GAAhB,EAAqB,MAArB,EAA6B,IAA7B,EAAmC;AAChD,QAAI,WAAW,SAAf,EAA0B,SAAS,EAAT;AAC1B,QAAI,CAAC,IAAL,EAAW,OAAO,EAAP;AACX,QAAI,MAAM,UAAU,CAAV,EAAa;AACnB,YAAI,QAAQ;AACR,iBAAM,GADE;AAER,iBAAM,GAFE;AAGR,iBAAM,GAHE;AAIR,iBAAM,GAJE;AAKR,iBAAM;AALE,SAAZ;AAOA,eAAO,KAAK,OAAL,KAAiB,KAAjB,GAAyB,MAAM,CAAN,CAAzB,GAAoC,CAA3C;AACH,KATD;;AAWA,QAAI,OAAO,GAAP,KAAe,QAAnB,EAA6B,MAAM,EAAE,OAAQ,GAAV,EAAN;;AAE7B,QAAI,QAAQ,IAAI,KAAJ,IAAa,EAAzB;AACA,QAAI,QAAQ,CAAC,IAAI,KAAJ,IAAa,EAAd,EAAkB,KAAlB,CAAwB,IAAxB,CAAZ;AACA,QAAI,WAAW,OAAO,MAAP,IAAiB,MAAM,MAAN,GAAe,IAAI,GAAJ,CAAf,GAA0B,GAA3C,IAAkD,GAAjE;;AAEA,WAAO,SACD,MAAM,IAAN,CAAW,QAAX,CADC,GACsB,IADtB,GAED,MAAM,GAAN,CAAU,UAAU,IAAV,EAAgB,EAAhB,EAAoB;AAC5B,YAAI,OAAO,OAAO,MAAM,MAAN,GAAe,CAAjC;AACA,YAAI,OAAO,KAAK,KAAL,IAAc,KAAK,KAAL,CAAW,MAApC;AACA,YAAI,UAAU,UAAU,OAAO,GAAP,GAAa,IAAI,GAAJ,CAAvB,IAAmC,GAAjD;;AAEA,eAAO,UACA,OAAO,IAAI,GAAJ,CAAP,GAAkB,IAAI,GAAJ,CADlB,IAC8B,IAAI,GAAJ,CAD9B,IAEA,OAAO,IAAI,GAAJ,CAAP,GAAkB,IAAI,GAAJ,CAFlB,IAE8B,GAF9B,GAGD,MAAM,IAAN,EAAY,OAAZ,EAAqB,IAArB,EAA2B,KAA3B,CAAiC,OAAO,MAAP,GAAgB,CAAjD,CAHN;AAKH,KAVC,EAUC,IAVD,CAUM,EAVN,CAFN;AAcH,CAlCD","file":"index-compiled.js","sourcesContent":["module.exports = function archy (obj, prefix, opts) {\n    if (prefix === undefined) prefix = '';\n    if (!opts) opts = {};\n    var chr = function (s) {\n        var chars = {\n            '│' : '|',\n            '└' : '`',\n            '├' : '+',\n            '─' : '-',\n            '┬' : '-'\n        };\n        return opts.unicode === false ? chars[s] : s;\n    };\n    \n    if (typeof obj === 'string') obj = { label : obj };\n    \n    var nodes = obj.nodes || [];\n    var lines = (obj.label || '').split('\\n');\n    var splitter = '\\n' + prefix + (nodes.length ? chr('│') : ' ') + ' ';\n    \n    return prefix\n        + lines.join(splitter) + '\\n'\n        + nodes.map(function (node, ix) {\n            var last = ix === nodes.length - 1;\n            var more = node.nodes && node.nodes.length;\n            var prefix_ = prefix + (last ? ' ' : chr('│')) + ' ';\n            \n            return prefix\n                + (last ? chr('└') : chr('├')) + chr('─')\n                + (more ? chr('┬') : chr('─')) + ' '\n                + archy(node, prefix_, opts).slice(prefix.length + 2)\n            ;\n        }).join('')\n    ;\n};\n"]}
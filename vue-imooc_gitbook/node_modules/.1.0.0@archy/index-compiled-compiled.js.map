{"version":3,"sources":["../.2.1.1@typings/node_modules/archy/index-compiled.js"],"names":[],"mappings":"AAAA,OAAO,OAAP,GAAiB,SAAS,KAAT,CAAe,GAAf,EAAoB,MAApB,EAA4B,IAA5B,EAAkC;AAC/C,QAAI,WAAW,SAAf,EAA0B,SAAS,EAAT;AAC1B,QAAI,CAAC,IAAL,EAAW,OAAO,EAAP;AACX,QAAI,MAAM,UAAU,CAAV,EAAa;AACnB,YAAI,QAAQ;AACR,iBAAK,GADG;AAER,iBAAK,GAFG;AAGR,iBAAK,GAHG;AAIR,iBAAK,GAJG;AAKR,iBAAK;AALG,SAAZ;AAOA,eAAO,KAAK,OAAL,KAAiB,KAAjB,GAAyB,MAAM,CAAN,CAAzB,GAAoC,CAA3C;AACH,KATD;;AAWA,QAAI,OAAO,GAAP,KAAe,QAAnB,EAA6B,MAAM,EAAE,OAAO,GAAT,EAAN;;AAE7B,QAAI,QAAQ,IAAI,KAAJ,IAAa,EAAzB;AACA,QAAI,QAAQ,CAAC,IAAI,KAAJ,IAAa,EAAd,EAAkB,KAAlB,CAAwB,IAAxB,CAAZ;AACA,QAAI,WAAW,OAAO,MAAP,IAAiB,MAAM,MAAN,GAAe,IAAI,GAAJ,CAAf,GAA0B,GAA3C,IAAkD,GAAjE;;AAEA,WAAO,SAAS,MAAM,IAAN,CAAW,QAAX,CAAT,GAAgC,IAAhC,GAAuC,MAAM,GAAN,CAAU,UAAU,IAAV,EAAgB,EAAhB,EAAoB;AACxE,YAAI,OAAO,OAAO,MAAM,MAAN,GAAe,CAAjC;AACA,YAAI,OAAO,KAAK,KAAL,IAAc,KAAK,KAAL,CAAW,MAApC;AACA,YAAI,UAAU,UAAU,OAAO,GAAP,GAAa,IAAI,GAAJ,CAAvB,IAAmC,GAAjD;;AAEA,eAAO,UAAU,OAAO,IAAI,GAAJ,CAAP,GAAkB,IAAI,GAAJ,CAA5B,IAAwC,IAAI,GAAJ,CAAxC,IAAoD,OAAO,IAAI,GAAJ,CAAP,GAAkB,IAAI,GAAJ,CAAtE,IAAkF,GAAlF,GAAwF,MAAM,IAAN,EAAY,OAAZ,EAAqB,IAArB,EAA2B,KAA3B,CAAiC,OAAO,MAAP,GAAgB,CAAjD,CAA/F;AACH,KAN6C,EAM3C,IAN2C,CAMtC,EANsC,CAA9C;AAOH,CA3BD;;AA6BA","file":"index-compiled-compiled.js","sourcesContent":["module.exports = function archy(obj, prefix, opts) {\n    if (prefix === undefined) prefix = '';\n    if (!opts) opts = {};\n    var chr = function (s) {\n        var chars = {\n            '│': '|',\n            '└': '`',\n            '├': '+',\n            '─': '-',\n            '┬': '-'\n        };\n        return opts.unicode === false ? chars[s] : s;\n    };\n\n    if (typeof obj === 'string') obj = { label: obj };\n\n    var nodes = obj.nodes || [];\n    var lines = (obj.label || '').split('\\n');\n    var splitter = '\\n' + prefix + (nodes.length ? chr('│') : ' ') + ' ';\n\n    return prefix + lines.join(splitter) + '\\n' + nodes.map(function (node, ix) {\n        var last = ix === nodes.length - 1;\n        var more = node.nodes && node.nodes.length;\n        var prefix_ = prefix + (last ? ' ' : chr('│')) + ' ';\n\n        return prefix + (last ? chr('└') : chr('├')) + chr('─') + (more ? chr('┬') : chr('─')) + ' ' + archy(node, prefix_, opts).slice(prefix.length + 2);\n    }).join('');\n};\n\n//# sourceMappingURL=index-compiled.js.map"]}
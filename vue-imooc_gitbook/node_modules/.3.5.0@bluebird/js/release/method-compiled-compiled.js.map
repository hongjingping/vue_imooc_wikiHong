{"version":3,"sources":["method-compiled.js"],"names":[],"mappings":"AAAA;;AAEA,OAAO,OAAP,GAAiB,UAAU,OAAV,EAAmB,QAAnB,EAA6B,mBAA7B,EAAkD,YAAlD,EAAgE,KAAhE,EAAuE;AACpF,QAAI,OAAO,QAAQ,QAAR,CAAX;AACA,QAAI,WAAW,KAAK,QAApB;;AAEA,YAAQ,MAAR,GAAiB,UAAU,EAAV,EAAc;AAC3B,YAAI,OAAO,EAAP,KAAc,UAAlB,EAA8B;AAC1B,kBAAM,IAAI,QAAQ,SAAZ,CAAsB,kCAAkC,KAAK,WAAL,CAAiB,EAAjB,CAAxD,CAAN;AACH;AACD,eAAO,YAAY;AACf,gBAAI,MAAM,IAAI,OAAJ,CAAY,QAAZ,CAAV;AACA,gBAAI,kBAAJ;AACA,gBAAI,YAAJ;AACA,gBAAI,QAAQ,SAAS,EAAT,EAAa,KAAb,CAAmB,IAAnB,EAAyB,SAAzB,CAAZ;AACA,gBAAI,iBAAiB,IAAI,WAAJ,EAArB;AACA,kBAAM,qBAAN,CAA4B,KAA5B,EAAmC,cAAnC,EAAmD,gBAAnD,EAAqE,GAArE;AACA,gBAAI,qBAAJ,CAA0B,KAA1B;AACA,mBAAO,GAAP;AACH,SATD;AAUH,KAdD;;AAgBA,YAAQ,OAAR,GAAkB,QAAQ,KAAR,IAAiB,UAAU,EAAV,EAAc;AAC7C,YAAI,OAAO,EAAP,KAAc,UAAlB,EAA8B;AAC1B,mBAAO,aAAa,kCAAkC,KAAK,WAAL,CAAiB,EAAjB,CAA/C,CAAP;AACH;AACD,YAAI,MAAM,IAAI,OAAJ,CAAY,QAAZ,CAAV;AACA,YAAI,kBAAJ;AACA,YAAI,YAAJ;AACA,YAAI,KAAJ;AACA,YAAI,UAAU,MAAV,GAAmB,CAAvB,EAA0B;AACtB,kBAAM,UAAN,CAAiB,+CAAjB;AACA,gBAAI,MAAM,UAAU,CAAV,CAAV;AACA,gBAAI,MAAM,UAAU,CAAV,CAAV;AACA,oBAAQ,KAAK,OAAL,CAAa,GAAb,IAAoB,SAAS,EAAT,EAAa,KAAb,CAAmB,GAAnB,EAAwB,GAAxB,CAApB,GAAmD,SAAS,EAAT,EAAa,IAAb,CAAkB,GAAlB,EAAuB,GAAvB,CAA3D;AACH,SALD,MAKO;AACH,oBAAQ,SAAS,EAAT,GAAR;AACH;AACD,YAAI,iBAAiB,IAAI,WAAJ,EAArB;AACA,cAAM,qBAAN,CAA4B,KAA5B,EAAmC,cAAnC,EAAmD,aAAnD,EAAkE,GAAlE;AACA,YAAI,qBAAJ,CAA0B,KAA1B;AACA,eAAO,GAAP;AACH,KApBD;;AAsBA,YAAQ,SAAR,CAAkB,qBAAlB,GAA0C,UAAU,KAAV,EAAiB;AACvD,YAAI,UAAU,KAAK,QAAnB,EAA6B;AACzB,iBAAK,eAAL,CAAqB,MAAM,CAA3B,EAA8B,KAA9B;AACH,SAFD,MAEO;AACH,iBAAK,gBAAL,CAAsB,KAAtB,EAA6B,IAA7B;AACH;AACJ,KAND;AAOH,CAjDD;;AAmDA","file":"method-compiled-compiled.js","sourcesContent":["\"use strict\";\n\nmodule.exports = function (Promise, INTERNAL, tryConvertToPromise, apiRejection, debug) {\n    var util = require(\"./util\");\n    var tryCatch = util.tryCatch;\n\n    Promise.method = function (fn) {\n        if (typeof fn !== \"function\") {\n            throw new Promise.TypeError(\"expecting a function but got \" + util.classString(fn));\n        }\n        return function () {\n            var ret = new Promise(INTERNAL);\n            ret._captureStackTrace();\n            ret._pushContext();\n            var value = tryCatch(fn).apply(this, arguments);\n            var promiseCreated = ret._popContext();\n            debug.checkForgottenReturns(value, promiseCreated, \"Promise.method\", ret);\n            ret._resolveFromSyncValue(value);\n            return ret;\n        };\n    };\n\n    Promise.attempt = Promise[\"try\"] = function (fn) {\n        if (typeof fn !== \"function\") {\n            return apiRejection(\"expecting a function but got \" + util.classString(fn));\n        }\n        var ret = new Promise(INTERNAL);\n        ret._captureStackTrace();\n        ret._pushContext();\n        var value;\n        if (arguments.length > 1) {\n            debug.deprecated(\"calling Promise.try with more than 1 argument\");\n            var arg = arguments[1];\n            var ctx = arguments[2];\n            value = util.isArray(arg) ? tryCatch(fn).apply(ctx, arg) : tryCatch(fn).call(ctx, arg);\n        } else {\n            value = tryCatch(fn)();\n        }\n        var promiseCreated = ret._popContext();\n        debug.checkForgottenReturns(value, promiseCreated, \"Promise.try\", ret);\n        ret._resolveFromSyncValue(value);\n        return ret;\n    };\n\n    Promise.prototype._resolveFromSyncValue = function (value) {\n        if (value === util.errorObj) {\n            this._rejectCallback(value.e, false);\n        } else {\n            this._resolveCallback(value, true);\n        }\n    };\n};\n\n//# sourceMappingURL=method-compiled.js.map"]}
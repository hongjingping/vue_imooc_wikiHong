{"version":3,"sources":["../../../typings/node_modules/bluebird/js/release/thenables.js"],"names":[],"mappings":"AAAA;;AACA,OAAO,OAAP,GAAiB,UAAS,OAAT,EAAkB,QAAlB,EAA4B;AAC7C,QAAI,OAAO,QAAQ,QAAR,CAAX;AACA,QAAI,WAAW,KAAK,QAApB;AACA,QAAI,WAAW,KAAK,QAApB;;AAEA,aAAS,mBAAT,CAA6B,GAA7B,EAAkC,OAAlC,EAA2C;AACvC,YAAI,SAAS,GAAT,CAAJ,EAAmB;AACf,gBAAI,eAAe,OAAnB,EAA4B,OAAO,GAAP;AAC5B,gBAAI,OAAO,QAAQ,GAAR,CAAX;AACA,gBAAI,SAAS,QAAb,EAAuB;AACnB,oBAAI,OAAJ,EAAa,QAAQ,YAAR;AACb,oBAAI,MAAM,QAAQ,MAAR,CAAe,KAAK,CAApB,CAAV;AACA,oBAAI,OAAJ,EAAa,QAAQ,WAAR;AACb,uBAAO,GAAP;AACH,aALD,MAKO,IAAI,OAAO,IAAP,KAAgB,UAApB,EAAgC;AACnC,oBAAI,qBAAqB,GAArB,CAAJ,EAA+B;AAC3B,wBAAI,MAAM,IAAI,OAAJ,CAAY,QAAZ,CAAV;AACA,wBAAI,KAAJ,CACI,IAAI,QADR,EAEI,IAAI,OAFR,EAGI,SAHJ,EAII,GAJJ,EAKI,IALJ;AAOA,2BAAO,GAAP;AACH;AACD,uBAAO,WAAW,GAAX,EAAgB,IAAhB,EAAsB,OAAtB,CAAP;AACH;AACJ;AACD,eAAO,GAAP;AACH;;AAED,aAAS,SAAT,CAAmB,GAAnB,EAAwB;AACpB,eAAO,IAAI,IAAX;AACH;;AAED,aAAS,OAAT,CAAiB,GAAjB,EAAsB;AAClB,YAAI;AACA,mBAAO,UAAU,GAAV,CAAP;AACH,SAFD,CAEE,OAAO,CAAP,EAAU;AACR,qBAAS,CAAT,GAAa,CAAb;AACA,mBAAO,QAAP;AACH;AACJ;;AAED,QAAI,UAAU,GAAG,cAAjB;AACA,aAAS,oBAAT,CAA8B,GAA9B,EAAmC;AAC/B,YAAI;AACA,mBAAO,QAAQ,IAAR,CAAa,GAAb,EAAkB,WAAlB,CAAP;AACH,SAFD,CAEE,OAAO,CAAP,EAAU;AACR,mBAAO,KAAP;AACH;AACJ;;AAED,aAAS,UAAT,CAAoB,CAApB,EAAuB,IAAvB,EAA6B,OAA7B,EAAsC;AAClC,YAAI,UAAU,IAAI,OAAJ,CAAY,QAAZ,CAAd;AACA,YAAI,MAAM,OAAV;AACA,YAAI,OAAJ,EAAa,QAAQ,YAAR;AACb,gBAAQ,kBAAR;AACA,YAAI,OAAJ,EAAa,QAAQ,WAAR;AACb,YAAI,cAAc,IAAlB;AACA,YAAI,SAAS,KAAK,QAAL,CAAc,IAAd,EAAoB,IAApB,CAAyB,CAAzB,EAA4B,OAA5B,EAAqC,MAArC,CAAb;AACA,sBAAc,KAAd;;AAEA,YAAI,WAAW,WAAW,QAA1B,EAAoC;AAChC,oBAAQ,eAAR,CAAwB,OAAO,CAA/B,EAAkC,IAAlC,EAAwC,IAAxC;AACA,sBAAU,IAAV;AACH;;AAED,iBAAS,OAAT,CAAiB,KAAjB,EAAwB;AACpB,gBAAI,CAAC,OAAL,EAAc;AACd,oBAAQ,gBAAR,CAAyB,KAAzB;AACA,sBAAU,IAAV;AACH;;AAED,iBAAS,MAAT,CAAgB,MAAhB,EAAwB;AACpB,gBAAI,CAAC,OAAL,EAAc;AACd,oBAAQ,eAAR,CAAwB,MAAxB,EAAgC,WAAhC,EAA6C,IAA7C;AACA,sBAAU,IAAV;AACH;AACD,eAAO,GAAP;AACH;;AAED,WAAO,mBAAP;AACC,CApFD","file":"thenables-compiled.js","sourcesContent":["\"use strict\";\nmodule.exports = function(Promise, INTERNAL) {\nvar util = require(\"./util\");\nvar errorObj = util.errorObj;\nvar isObject = util.isObject;\n\nfunction tryConvertToPromise(obj, context) {\n    if (isObject(obj)) {\n        if (obj instanceof Promise) return obj;\n        var then = getThen(obj);\n        if (then === errorObj) {\n            if (context) context._pushContext();\n            var ret = Promise.reject(then.e);\n            if (context) context._popContext();\n            return ret;\n        } else if (typeof then === \"function\") {\n            if (isAnyBluebirdPromise(obj)) {\n                var ret = new Promise(INTERNAL);\n                obj._then(\n                    ret._fulfill,\n                    ret._reject,\n                    undefined,\n                    ret,\n                    null\n                );\n                return ret;\n            }\n            return doThenable(obj, then, context);\n        }\n    }\n    return obj;\n}\n\nfunction doGetThen(obj) {\n    return obj.then;\n}\n\nfunction getThen(obj) {\n    try {\n        return doGetThen(obj);\n    } catch (e) {\n        errorObj.e = e;\n        return errorObj;\n    }\n}\n\nvar hasProp = {}.hasOwnProperty;\nfunction isAnyBluebirdPromise(obj) {\n    try {\n        return hasProp.call(obj, \"_promise0\");\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction doThenable(x, then, context) {\n    var promise = new Promise(INTERNAL);\n    var ret = promise;\n    if (context) context._pushContext();\n    promise._captureStackTrace();\n    if (context) context._popContext();\n    var synchronous = true;\n    var result = util.tryCatch(then).call(x, resolve, reject);\n    synchronous = false;\n\n    if (promise && result === errorObj) {\n        promise._rejectCallback(result.e, true, true);\n        promise = null;\n    }\n\n    function resolve(value) {\n        if (!promise) return;\n        promise._resolveCallback(value);\n        promise = null;\n    }\n\n    function reject(reason) {\n        if (!promise) return;\n        promise._rejectCallback(reason, synchronous, true);\n        promise = null;\n    }\n    return ret;\n}\n\nreturn tryConvertToPromise;\n};\n"]}
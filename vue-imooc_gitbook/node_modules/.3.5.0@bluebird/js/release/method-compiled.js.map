{"version":3,"sources":["../../../typings/node_modules/bluebird/js/release/method.js"],"names":[],"mappings":"AAAA;;AACA,OAAO,OAAP,GACA,UAAS,OAAT,EAAkB,QAAlB,EAA4B,mBAA5B,EAAiD,YAAjD,EAA+D,KAA/D,EAAsE;AACtE,QAAI,OAAO,QAAQ,QAAR,CAAX;AACA,QAAI,WAAW,KAAK,QAApB;;AAEA,YAAQ,MAAR,GAAiB,UAAU,EAAV,EAAc;AAC3B,YAAI,OAAO,EAAP,KAAc,UAAlB,EAA8B;AAC1B,kBAAM,IAAI,QAAQ,SAAZ,CAAsB,kCAAkC,KAAK,WAAL,CAAiB,EAAjB,CAAxD,CAAN;AACH;AACD,eAAO,YAAY;AACf,gBAAI,MAAM,IAAI,OAAJ,CAAY,QAAZ,CAAV;AACA,gBAAI,kBAAJ;AACA,gBAAI,YAAJ;AACA,gBAAI,QAAQ,SAAS,EAAT,EAAa,KAAb,CAAmB,IAAnB,EAAyB,SAAzB,CAAZ;AACA,gBAAI,iBAAiB,IAAI,WAAJ,EAArB;AACA,kBAAM,qBAAN,CACI,KADJ,EACW,cADX,EAC2B,gBAD3B,EAC6C,GAD7C;AAEA,gBAAI,qBAAJ,CAA0B,KAA1B;AACA,mBAAO,GAAP;AACH,SAVD;AAWH,KAfD;;AAiBA,YAAQ,OAAR,GAAkB,QAAQ,KAAR,IAAiB,UAAU,EAAV,EAAc;AAC7C,YAAI,OAAO,EAAP,KAAc,UAAlB,EAA8B;AAC1B,mBAAO,aAAa,kCAAkC,KAAK,WAAL,CAAiB,EAAjB,CAA/C,CAAP;AACH;AACD,YAAI,MAAM,IAAI,OAAJ,CAAY,QAAZ,CAAV;AACA,YAAI,kBAAJ;AACA,YAAI,YAAJ;AACA,YAAI,KAAJ;AACA,YAAI,UAAU,MAAV,GAAmB,CAAvB,EAA0B;AACtB,kBAAM,UAAN,CAAiB,+CAAjB;AACA,gBAAI,MAAM,UAAU,CAAV,CAAV;AACA,gBAAI,MAAM,UAAU,CAAV,CAAV;AACA,oBAAQ,KAAK,OAAL,CAAa,GAAb,IAAoB,SAAS,EAAT,EAAa,KAAb,CAAmB,GAAnB,EAAwB,GAAxB,CAApB,GACoB,SAAS,EAAT,EAAa,IAAb,CAAkB,GAAlB,EAAuB,GAAvB,CAD5B;AAEH,SAND,MAMO;AACH,oBAAQ,SAAS,EAAT,GAAR;AACH;AACD,YAAI,iBAAiB,IAAI,WAAJ,EAArB;AACA,cAAM,qBAAN,CACI,KADJ,EACW,cADX,EAC2B,aAD3B,EAC0C,GAD1C;AAEA,YAAI,qBAAJ,CAA0B,KAA1B;AACA,eAAO,GAAP;AACH,KAtBD;;AAwBA,YAAQ,SAAR,CAAkB,qBAAlB,GAA0C,UAAU,KAAV,EAAiB;AACvD,YAAI,UAAU,KAAK,QAAnB,EAA6B;AACzB,iBAAK,eAAL,CAAqB,MAAM,CAA3B,EAA8B,KAA9B;AACH,SAFD,MAEO;AACH,iBAAK,gBAAL,CAAsB,KAAtB,EAA6B,IAA7B;AACH;AACJ,KAND;AAOC,CArDD","file":"method-compiled.js","sourcesContent":["\"use strict\";\nmodule.exports =\nfunction(Promise, INTERNAL, tryConvertToPromise, apiRejection, debug) {\nvar util = require(\"./util\");\nvar tryCatch = util.tryCatch;\n\nPromise.method = function (fn) {\n    if (typeof fn !== \"function\") {\n        throw new Promise.TypeError(\"expecting a function but got \" + util.classString(fn));\n    }\n    return function () {\n        var ret = new Promise(INTERNAL);\n        ret._captureStackTrace();\n        ret._pushContext();\n        var value = tryCatch(fn).apply(this, arguments);\n        var promiseCreated = ret._popContext();\n        debug.checkForgottenReturns(\n            value, promiseCreated, \"Promise.method\", ret);\n        ret._resolveFromSyncValue(value);\n        return ret;\n    };\n};\n\nPromise.attempt = Promise[\"try\"] = function (fn) {\n    if (typeof fn !== \"function\") {\n        return apiRejection(\"expecting a function but got \" + util.classString(fn));\n    }\n    var ret = new Promise(INTERNAL);\n    ret._captureStackTrace();\n    ret._pushContext();\n    var value;\n    if (arguments.length > 1) {\n        debug.deprecated(\"calling Promise.try with more than 1 argument\");\n        var arg = arguments[1];\n        var ctx = arguments[2];\n        value = util.isArray(arg) ? tryCatch(fn).apply(ctx, arg)\n                                  : tryCatch(fn).call(ctx, arg);\n    } else {\n        value = tryCatch(fn)();\n    }\n    var promiseCreated = ret._popContext();\n    debug.checkForgottenReturns(\n        value, promiseCreated, \"Promise.try\", ret);\n    ret._resolveFromSyncValue(value);\n    return ret;\n};\n\nPromise.prototype._resolveFromSyncValue = function (value) {\n    if (value === util.errorObj) {\n        this._rejectCallback(value.e, false);\n    } else {\n        this._resolveCallback(value, true);\n    }\n};\n};\n"]}
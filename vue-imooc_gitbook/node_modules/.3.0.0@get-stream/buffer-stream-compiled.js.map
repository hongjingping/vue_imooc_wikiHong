{"version":3,"sources":["../got/node_modules/get-stream/buffer-stream.js"],"names":[],"mappings":"AAAA;;AACA,MAAM,cAAc,QAAQ,QAAR,EAAkB,WAAtC;;AAEA,OAAO,OAAP,GAAiB,QAAQ;AACxB,QAAO,OAAO,MAAP,CAAc,EAAd,EAAkB,IAAlB,CAAP;;AAEA,OAAM,QAAQ,KAAK,KAAnB;AACA,KAAI,WAAW,KAAK,QAApB;AACA,OAAM,SAAS,aAAa,QAA5B;AACA,KAAI,aAAa,KAAjB;;AAEA,KAAI,KAAJ,EAAW;AACV,eAAa,EAAE,YAAY,MAAd,CAAb;AACA,EAFD,MAEO;AACN,aAAW,YAAY,MAAvB;AACA;;AAED,KAAI,MAAJ,EAAY;AACX,aAAW,IAAX;AACA;;AAED,KAAI,MAAM,CAAV;AACA,OAAM,MAAM,EAAZ;AACA,OAAM,SAAS,IAAI,WAAJ,CAAgB,EAAC,UAAD,EAAhB,CAAf;;AAEA,KAAI,QAAJ,EAAc;AACb,SAAO,WAAP,CAAmB,QAAnB;AACA;;AAED,QAAO,EAAP,CAAU,MAAV,EAAkB,SAAS;AAC1B,MAAI,IAAJ,CAAS,KAAT;;AAEA,MAAI,UAAJ,EAAgB;AACf,SAAM,IAAI,MAAV;AACA,GAFD,MAEO;AACN,UAAO,MAAM,MAAb;AACA;AACD,EARD;;AAUA,QAAO,gBAAP,GAA0B,MAAM;AAC/B,MAAI,KAAJ,EAAW;AACV,UAAO,GAAP;AACA;;AAED,SAAO,SAAS,OAAO,MAAP,CAAc,GAAd,EAAmB,GAAnB,CAAT,GAAmC,IAAI,IAAJ,CAAS,EAAT,CAA1C;AACA,EAND;;AAQA,QAAO,iBAAP,GAA2B,MAAM,GAAjC;;AAEA,QAAO,MAAP;AACA,CA/CD","file":"buffer-stream-compiled.js","sourcesContent":["'use strict';\nconst PassThrough = require('stream').PassThrough;\n\nmodule.exports = opts => {\n\topts = Object.assign({}, opts);\n\n\tconst array = opts.array;\n\tlet encoding = opts.encoding;\n\tconst buffer = encoding === 'buffer';\n\tlet objectMode = false;\n\n\tif (array) {\n\t\tobjectMode = !(encoding || buffer);\n\t} else {\n\t\tencoding = encoding || 'utf8';\n\t}\n\n\tif (buffer) {\n\t\tencoding = null;\n\t}\n\n\tlet len = 0;\n\tconst ret = [];\n\tconst stream = new PassThrough({objectMode});\n\n\tif (encoding) {\n\t\tstream.setEncoding(encoding);\n\t}\n\n\tstream.on('data', chunk => {\n\t\tret.push(chunk);\n\n\t\tif (objectMode) {\n\t\t\tlen = ret.length;\n\t\t} else {\n\t\t\tlen += chunk.length;\n\t\t}\n\t});\n\n\tstream.getBufferedValue = () => {\n\t\tif (array) {\n\t\t\treturn ret;\n\t\t}\n\n\t\treturn buffer ? Buffer.concat(ret, len) : ret.join('');\n\t};\n\n\tstream.getBufferedLength = () => len;\n\n\treturn stream;\n};\n"]}
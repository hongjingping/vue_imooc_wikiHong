{"version":3,"sources":["../../typings/node_modules/typings-core/node_modules/debug/src/node-compiled-compiled.js"],"names":[],"mappings":"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","file":"node-compiled-compiled-compiled.js","sourcesContent":["/**\n * Module dependencies.\n */\n\nvar tty = require('tty');\nvar util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(function (key) {\n  return (/^debug_/i.test(key)\n  );\n}).reduce(function (obj, key) {\n  // camel-case\n  var prop = key.substring(6).toLowerCase().replace(/_([a-z])/g, function (_, k) {\n    return k.toUpperCase();\n  });\n\n  // coerce string value into JS value\n  var val = process.env[key];\n  if (/^(yes|on|true|enabled)$/i.test(val)) val = true;else if (/^(no|off|false|disabled)$/i.test(val)) val = false;else if (val === 'null') val = null;else val = Number(val);\n\n  obj[prop] = val;\n  return obj;\n}, {});\n\n/**\n * The file descriptor to write the `debug()` calls to.\n * Set the `DEBUG_FD` env variable to override with another value. i.e.:\n *\n *   $ DEBUG_FD=3 node script.js 3>debug.log\n */\n\nvar fd = parseInt(process.env.DEBUG_FD, 10) || 2;\n\nif (1 !== fd && 2 !== fd) {\n  util.deprecate(function () {}, 'except for stderr(2) and stdout(1), any other usage of DEBUG_FD is deprecated. Override debug.log if you want to use a different log function (https://git.io/debug_fd)')();\n}\n\nvar stream = 1 === fd ? process.stdout : 2 === fd ? process.stderr : createWritableStdioStream(fd);\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n  return 'colors' in exports.inspectOpts ? Boolean(exports.inspectOpts.colors) : tty.isatty(fd);\n}\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nexports.formatters.o = function (v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts).replace(/\\s*\\n\\s*/g, ' ');\n};\n\n/**\n * Map %o to `util.inspect()`, allowing multiple lines if needed.\n */\n\nexports.formatters.O = function (v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts);\n};\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var name = this.namespace;\n  var useColors = this.useColors;\n\n  if (useColors) {\n    var c = this.color;\n    var prefix = '  \\u001b[3' + c + ';1m' + name + ' ' + '\\u001b[0m';\n\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n    args.push('\\u001b[3' + c + 'm+' + exports.humanize(this.diff) + '\\u001b[0m');\n  } else {\n    args[0] = new Date().toUTCString() + ' ' + name + ' ' + args[0];\n  }\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to `stream`.\n */\n\nfunction log() {\n  return stream.write(util.format.apply(util, arguments) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  if (null == namespaces) {\n    // If you set a process.env field to null or undefined, it gets cast to the\n    // string 'null' or 'undefined'. Just delete instead.\n    delete process.env.DEBUG;\n  } else {\n    process.env.DEBUG = namespaces;\n  }\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  return process.env.DEBUG;\n}\n\n/**\n * Copied from `node/src/node.js`.\n *\n * XXX: It's lame that node doesn't expose this API out-of-the-box. It also\n * relies on the undocumented `tty_wrap.guessHandleType()` which is also lame.\n */\n\nfunction createWritableStdioStream(fd) {\n  var stream;\n  var tty_wrap = process.binding('tty_wrap');\n\n  // Note stream._type is used for test-module-load-list.js\n\n  switch (tty_wrap.guessHandleType(fd)) {\n    case 'TTY':\n      stream = new tty.WriteStream(fd);\n      stream._type = 'tty';\n\n      // Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    case 'FILE':\n      var fs = require('fs');\n      stream = new fs.SyncWriteStream(fd, { autoClose: false });\n      stream._type = 'fs';\n      break;\n\n    case 'PIPE':\n    case 'TCP':\n      var net = require('net');\n      stream = new net.Socket({\n        fd: fd,\n        readable: false,\n        writable: true\n      });\n\n      // FIXME Should probably have an option in net.Socket to create a\n      // stream from an existing fd which is writable only. But for now\n      // we'll just add this hack and set the `readable` member to false.\n      // Test: ./node test/fixtures/echo.js < /etc/passwd\n      stream.readable = false;\n      stream.read = null;\n      stream._type = 'pipe';\n\n      // FIXME Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    default:\n      // Probably an error on in uv_guess_handle()\n      throw new Error('Implement me. Unknown stream file type!');\n  }\n\n  // For supporting legacy API we put the FD here.\n  stream.fd = fd;\n\n  stream._isStdio = true;\n\n  return stream;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init(debug) {\n  debug.inspectOpts = {};\n\n  var keys = Object.keys(exports.inspectOpts);\n  for (var i = 0; i < keys.length; i++) {\n    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n  }\n}\n\n/**\n * Enable namespaces listed in `process.env.DEBUG` initially.\n */\n\nexports.enable(load());\n\n//# sourceMappingURL=node-compiled.js.map\n\n//# sourceMappingURL=node-compiled-compiled.js.map"]}
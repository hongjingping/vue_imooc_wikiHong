{"version":3,"sources":["../../execa/node_modules/cross-spawn-async/node_modules/lru-cache/node_modules/pseudomap/test/basic.js"],"names":[],"mappings":"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","file":"basic-compiled.js","sourcesContent":["var t = require('tap')\n\nprocess.env.TEST_PSEUDOMAP = 'true'\n\nvar PM = require('../')\nrunTests(PM)\n\n// if possible, verify that Map also behaves the same way\nif (typeof Map === 'function')\n  runTests(Map)\n\n\nfunction runTests (Map) {\n  t.throws(Map)\n\n  var m = new Map()\n\n  t.equal(m.size, 0)\n\n  m.set(1, '1 string')\n  t.equal(m.get(1), '1 string')\n  t.equal(m.size, 1)\n  m.size = 1000\n  t.equal(m.size, 1)\n  m.size = 0\n  t.equal(m.size, 1)\n\n  m = new Map([[1, 'number 1'], ['1', 'string 1']])\n  t.equal(m.get(1), 'number 1')\n  t.equal(m.get('1'), 'string 1')\n  t.equal(m.size, 2)\n\n  m = new Map(m)\n  t.equal(m.get(1), 'number 1')\n  t.equal(m.get('1'), 'string 1')\n  t.equal(m.size, 2)\n\n  var akey = {}\n  var bkey = {}\n  m.set(akey, { some: 'data' })\n  m.set(bkey, { some: 'other data' })\n  t.same(m.get(akey), { some: 'data' })\n  t.same(m.get(bkey), { some: 'other data' })\n  t.equal(m.size, 4)\n\n  var x = /x/\n  var y = /x/\n  m.set(x, 'x regex')\n  m.set(y, 'y regex')\n  t.equal(m.get(x), 'x regex')\n  m.set(x, 'x again')\n  t.equal(m.get(x), 'x again')\n  t.equal(m.size, 6)\n\n  m.set(NaN, 'not a number')\n  t.equal(m.get(NaN), 'not a number')\n  m.set(NaN, 'it is a ' + typeof NaN)\n  t.equal(m.get(NaN), 'it is a number')\n  m.set('NaN', 'stringie nan')\n  t.equal(m.get(NaN), 'it is a number')\n  t.equal(m.get('NaN'), 'stringie nan')\n  t.equal(m.size, 8)\n\n  m.delete(NaN)\n  t.equal(m.get(NaN), undefined)\n  t.equal(m.size, 7)\n\n  var expect = [\n    { value: 'number 1', key: 1 },\n    { value: 'string 1', key: '1' },\n    { value: { some: 'data' }, key: {} },\n    { value: { some: 'other data' }, key: {} },\n    { value: 'x again', key: /x/ },\n    { value: 'y regex', key: /x/ },\n    { value: 'stringie nan', key: 'NaN' }\n  ]\n  var actual = []\n\n  m.forEach(function (value, key) {\n    actual.push({ value: value, key: key })\n  })\n  t.same(actual, expect)\n\n  m.clear()\n  t.equal(m.size, 0)\n}\n"]}
{"version":3,"sources":["../thenify/node_modules/any-promise/register.js"],"names":[],"mappings":"AAAA;;AACA,OAAO,OAAP,GAAiB,QAAQ,UAAR,EAAoB,MAApB,EAA4B,kBAA5B,CAAjB;;AAEA;;;;;;;;;AASA,SAAS,kBAAT,CAA4B,cAA5B,EAA2C;AACzC,MAAI,OAAO,IAAX;;AAEA,MAAG,0BAA0B,cAA1B,CAAH,EAA6C;AAC3C;AACA,WAAO;AACL,eAAS,OAAO,OADX;AAEL,sBAAgB;AAFX,KAAP;AAID,GAND,MAMO,IAAG,cAAH,EAAkB;AACvB;AACA,QAAI,MAAM,QAAQ,cAAR,CAAV;AACA,WAAO;AACL,eAAS,IAAI,OAAJ,IAAe,GADnB;AAEL,sBAAgB;AAFX,KAAP;AAID,GAPM,MAOA;AACL;AACA;AACA;AACA,WAAO,eAAP;AACD;;AAED,MAAG,SAAS,IAAZ,EAAiB;AACf,UAAM,IAAI,KAAJ,CAAU,+CACd,oDADc,GAEd,sDAFc,GAGd,gEAHc,GAId,2DAJI,CAAN;AAKD;;AAED,SAAO,IAAP;AACD;;AAED;;;;AAIA,SAAS,yBAAT,CAAmC,cAAnC,EAAkD;AAChD,MAAG,cAAH,EAAkB;AAChB,WAAO,mBAAmB,gBAA1B;AACD,GAFD,MAEO,IAAG,OAAO,OAAO,OAAd,KAA0B,WAA7B,EAAyC;AAC9C;AACA;AACA;AACA,QAAI,UAAW,sBAAD,CAAyB,IAAzB,CAA8B,QAAQ,OAAtC,CAAd;AACA,WAAO,EAAE,WAAW,CAAC,QAAQ,CAAR,CAAD,IAAe,CAA1B,IAA+B,CAAC,QAAQ,CAAR,CAAD,GAAc,EAA/C,CAAP;AACD;;AAED;AACA,SAAO,KAAP;AACD;;AAED;;;;;;;;;AASA,SAAS,aAAT,GAAwB;AACtB,MAAI,OAAO,CACP,aADO,EAEP,SAFO,EAGP,qBAHO,EAIP,UAJO,EAKP,MALO,EAMP,MANO,EAOP,GAPO,EAQP,QARO,EASP,KATO,EAUP,KAVO,CAAX;AAWA,MAAI,IAAI,CAAR;AAAA,MAAW,MAAM,KAAK,MAAtB;AACA,SAAM,IAAI,GAAV,EAAe,GAAf,EAAmB;AACjB,QAAI;AACF,aAAO,mBAAmB,KAAK,CAAL,CAAnB,CAAP;AACD,KAFD,CAEE,OAAM,CAAN,EAAQ,CAAE;AACb;AACD,SAAO,IAAP;AACD","file":"register-compiled.js","sourcesContent":["\"use strict\"\nmodule.exports = require('./loader')(global, loadImplementation);\n\n/**\n * Node.js version of loadImplementation.\n *\n * Requires the given implementation and returns the registration\n * containing {Promise, implementation}\n *\n * If implementation is undefined or global.Promise, loads it\n * Otherwise uses require\n */\nfunction loadImplementation(implementation){\n  var impl = null\n\n  if(shouldPreferGlobalPromise(implementation)){\n    // if no implementation or env specified use global.Promise\n    impl = {\n      Promise: global.Promise,\n      implementation: 'global.Promise'\n    }\n  } else if(implementation){\n    // if implementation specified, require it\n    var lib = require(implementation)\n    impl = {\n      Promise: lib.Promise || lib,\n      implementation: implementation\n    }\n  } else {\n    // try to auto detect implementation. This is non-deterministic\n    // and should prefer other branches, but this is our last chance\n    // to load something without throwing error\n    impl = tryAutoDetect()\n  }\n\n  if(impl === null){\n    throw new Error('Cannot find any-promise implementation nor'+\n      ' global.Promise. You must install polyfill or call'+\n      ' require(\"any-promise/register\") with your preferred'+\n      ' implementation, e.g. require(\"any-promise/register/bluebird\")'+\n      ' on application load prior to any require(\"any-promise\").')\n  }\n\n  return impl\n}\n\n/**\n * Determines if the global.Promise should be preferred if an implementation\n * has not been registered.\n */\nfunction shouldPreferGlobalPromise(implementation){\n  if(implementation){\n    return implementation === 'global.Promise'\n  } else if(typeof global.Promise !== 'undefined'){\n    // Load global promise if implementation not specified\n    // Versions < 0.11 did not have global Promise\n    // Do not use for version < 0.12 as version 0.11 contained buggy versions\n    var version = (/v(\\d+)\\.(\\d+)\\.(\\d+)/).exec(process.version)\n    return !(version && +version[1] == 0 && +version[2] < 12)\n  }\n\n  // do not have global.Promise or another implementation was specified\n  return false\n}\n\n/**\n * Look for common libs as last resort there is no guarantee that\n * this will return a desired implementation or even be deterministic.\n * The priority is also nearly arbitrary. We are only doing this\n * for older versions of Node.js <0.12 that do not have a reasonable\n * global.Promise implementation and we the user has not registered\n * the preference. This preserves the behavior of any-promise <= 0.1\n * and may be deprecated or removed in the future\n */\nfunction tryAutoDetect(){\n  var libs = [\n      \"es6-promise\",\n      \"promise\",\n      \"native-promise-only\",\n      \"bluebird\",\n      \"rsvp\",\n      \"when\",\n      \"q\",\n      \"pinkie\",\n      \"lie\",\n      \"vow\"]\n  var i = 0, len = libs.length\n  for(; i < len; i++){\n    try {\n      return loadImplementation(libs[i])\n    } catch(e){}\n  }\n  return null\n}\n"]}
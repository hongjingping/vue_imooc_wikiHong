{"version":3,"sources":["../got/node_modules/duplexer3/index.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,SAAS,QAAQ,QAAR,CAAb;;AAEA,SAAS,aAAT,CAAuB,OAAvB,EAAgC,QAAhC,EAA0C,QAA1C,EAAoD;AAClD,MAAI,OAAO,QAAP,KAAoB,WAAxB,EAAqC;AACnC,eAAW,QAAX;AACA,eAAW,OAAX;AACA,cAAU,IAAV;AACD;;AAED,SAAO,MAAP,CAAc,IAAd,CAAmB,IAAnB,EAAyB,OAAzB;;AAEA,MAAI,OAAO,SAAS,IAAhB,KAAyB,UAA7B,EAAyC;AACvC,eAAY,IAAI,OAAO,QAAX,CAAoB,OAApB,CAAD,CAA+B,IAA/B,CAAoC,QAApC,CAAX;AACD;;AAED,OAAK,SAAL,GAAiB,QAAjB;AACA,OAAK,SAAL,GAAiB,QAAjB;AACA,OAAK,QAAL,GAAgB,KAAhB;;AAEA,MAAI,OAAO,IAAX;;AAEA,WAAS,IAAT,CAAc,QAAd,EAAwB,YAAW;AACjC,SAAK,GAAL;AACD,GAFD;;AAIA,OAAK,IAAL,CAAU,QAAV,EAAoB,YAAW;AAC7B,aAAS,GAAT;AACD,GAFD;;AAIA,WAAS,EAAT,CAAY,UAAZ,EAAwB,YAAW;AACjC,QAAI,KAAK,QAAT,EAAmB;AACjB,WAAK,QAAL,GAAgB,KAAhB;AACA,WAAK,KAAL;AACD;AACF,GALD;;AAOA,WAAS,IAAT,CAAc,KAAd,EAAqB,YAAW;AAC9B,SAAK,IAAL,CAAU,IAAV;AACD,GAFD;;AAIA,MAAI,CAAC,OAAD,IAAY,OAAO,QAAQ,YAAf,KAAgC,WAA5C,IAA2D,QAAQ,YAAvE,EAAqF;AACnF,aAAS,EAAT,CAAY,OAAZ,EAAqB,UAAS,GAAT,EAAc;AACjC,WAAK,IAAL,CAAU,OAAV,EAAmB,GAAnB;AACD,KAFD;;AAIA,aAAS,EAAT,CAAY,OAAZ,EAAqB,UAAS,GAAT,EAAc;AACjC,WAAK,IAAL,CAAU,OAAV,EAAmB,GAAnB;AACD,KAFD;AAGD;AACF;;AAED,cAAc,SAAd,GAA0B,OAAO,MAAP,CAAc,OAAO,MAAP,CAAc,SAA5B,EAAuC,EAAC,aAAa,EAAC,OAAO,aAAR,EAAd,EAAvC,CAA1B;;AAEA,cAAc,SAAd,CAAwB,MAAxB,GAAiC,SAAS,MAAT,CAAgB,KAAhB,EAAuB,QAAvB,EAAiC,IAAjC,EAAuC;AACtE,OAAK,SAAL,CAAe,KAAf,CAAqB,KAArB,EAA4B,QAA5B,EAAsC,IAAtC;AACD,CAFD;;AAIA,cAAc,SAAd,CAAwB,KAAxB,GAAgC,SAAS,KAAT,GAAiB;AAC/C,MAAI,GAAJ;AACA,MAAI,QAAQ,CAAZ;AACA,SAAO,CAAC,MAAM,KAAK,SAAL,CAAe,IAAf,EAAP,MAAkC,IAAzC,EAA+C;AAC7C,SAAK,IAAL,CAAU,GAAV;AACA;AACD;AACD,MAAI,UAAU,CAAd,EAAiB;AACf,SAAK,QAAL,GAAgB,IAAhB;AACD;AACF,CAVD;;AAYA,OAAO,OAAP,GAAiB,SAAS,OAAT,CAAiB,OAAjB,EAA0B,QAA1B,EAAoC,QAApC,EAA8C;AAC7D,SAAO,IAAI,aAAJ,CAAkB,OAAlB,EAA2B,QAA3B,EAAqC,QAArC,CAAP;AACD,CAFD;;AAIA,OAAO,OAAP,CAAe,aAAf,GAA+B,aAA/B","file":"index-compiled.js","sourcesContent":["\"use strict\";\n\nvar stream = require(\"stream\");\n\nfunction DuplexWrapper(options, writable, readable) {\n  if (typeof readable === \"undefined\") {\n    readable = writable;\n    writable = options;\n    options = null;\n  }\n\n  stream.Duplex.call(this, options);\n\n  if (typeof readable.read !== \"function\") {\n    readable = (new stream.Readable(options)).wrap(readable);\n  }\n\n  this._writable = writable;\n  this._readable = readable;\n  this._waiting = false;\n\n  var self = this;\n\n  writable.once(\"finish\", function() {\n    self.end();\n  });\n\n  this.once(\"finish\", function() {\n    writable.end();\n  });\n\n  readable.on(\"readable\", function() {\n    if (self._waiting) {\n      self._waiting = false;\n      self._read();\n    }\n  });\n\n  readable.once(\"end\", function() {\n    self.push(null);\n  });\n\n  if (!options || typeof options.bubbleErrors === \"undefined\" || options.bubbleErrors) {\n    writable.on(\"error\", function(err) {\n      self.emit(\"error\", err);\n    });\n\n    readable.on(\"error\", function(err) {\n      self.emit(\"error\", err);\n    });\n  }\n}\n\nDuplexWrapper.prototype = Object.create(stream.Duplex.prototype, {constructor: {value: DuplexWrapper}});\n\nDuplexWrapper.prototype._write = function _write(input, encoding, done) {\n  this._writable.write(input, encoding, done);\n};\n\nDuplexWrapper.prototype._read = function _read() {\n  var buf;\n  var reads = 0;\n  while ((buf = this._readable.read()) !== null) {\n    this.push(buf);\n    reads++;\n  }\n  if (reads === 0) {\n    this._waiting = true;\n  }\n};\n\nmodule.exports = function duplex2(options, writable, readable) {\n  return new DuplexWrapper(options, writable, readable);\n};\n\nmodule.exports.DuplexWrapper = DuplexWrapper;\n"]}